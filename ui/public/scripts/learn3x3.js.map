{
  "version": 3,
  "sources": ["../../src/scripts/pieceIndices.ts", "../../src/scripts/colors.ts", "../../src/scripts/common/util.ts", "../../src/scripts/common/rand.ts", "../../src/scripts/util.ts", "../../src/scripts/scramble.ts", "../../src/scripts/cube.ts", "../../src/scripts/buffers.ts", "../../src/scripts/common/spring.ts", "../../src/scripts/dragDetector.ts", "../../src/scripts/glMatrix.ts", "../../src/scripts/common/singleton.ts", "../../src/scripts/scene.ts", "../../src/scripts/slide.ts", "../../src/scripts/ui.ts", "../../src/scripts/learnBase.ts", "../../src/scripts/learn3x3.ts"],
  "sourcesContent": ["export const CENTERS = [4, 13, 22, 31, 40, 49];\r\nexport const UBL = [0, 29, 36];\r\nexport const URB = [6, 35, 51];\r\nexport const ULF = [2, 9, 42];\r\nexport const UFR = [8, 15, 45];\r\nexport const DFL = [18, 11, 44];\r\nexport const DRF = [24, 47, 17];\r\nexport const DLB = [20, 38, 27];\r\nexport const DBR = [26, 33, 53];\r\nexport const UB = [3, 32];\r\nexport const UL = [1, 39];\r\nexport const UR = [7, 48];\r\nexport const UF = [5, 12];\r\nexport const FL = [10, 43];\r\nexport const FR = [16, 46];\r\nexport const DF = [21, 14];\r\nexport const DL = [19, 41];\r\nexport const DR = [25, 50];\r\nexport const DB = [23, 30];\r\nexport const BL = [28, 37];\r\nexport const BR = [34, 52];\r\nexport const layer1Corners = [...UBL, ...URB, ...ULF, ...UFR];\r\nexport const layer2Corners = [...DFL, ...DRF, ...DLB, ...DBR];\r\nexport const layer1Edges = [...UB, ...UL, ...UR, ...UF];\r\nexport const layer2Edges = [...FL, ...FR, ...BL, ...BR];\r\nexport const layer3Edges = [...DF, ...DL, ...DR, ...DB];\r\nexport const cross = [...CENTERS, ...layer1Edges];\r\nexport const firstLayer = [...cross, ...layer1Corners];\r\nexport const f2l = [...firstLayer, ...layer2Edges];\r\nexport const eoll = [19, 21, 23, 25];\r\nexport const oll = [18, 19, 20, 21, 22, 23, 24, 25, 26];\r\nexport const cpll = [11, 17, 27, 33, 38, 44, 47, 53];\r\nexport const lastLayer = [...layer3Edges, ...layer2Corners];\r\nexport const allPieces = [...f2l, ...lastLayer];", "export const WHITE = [1.0, 1.0, 1.0, 1.0];\r\nexport const GRAY = [0.5, 0.5, 0.5, 1.0];\r\nexport const YELLOW = [1.0, 1.0, 0.0, 1.0];\r\nexport const GREEN = [0.0, 1.0, 0.0, 1.0];\r\nexport const BLUE = [0.0, 0.0, 1.0, 1.0];\r\nexport const ORANGE = [1.0, 0.5, 0.0, 1.0];\r\nexport const RED = [1.0, 0.0, 0.0, 1.0];\r\nexport const BLACK = [0.0, 0.0, 0.0, 1.0];\r\n\r\nconst colors = [WHITE, GREEN, YELLOW, BLUE, ORANGE, RED];\r\nexport function faceToColor(face: number): number[] {\r\n    if (face < 0 || face >= colors.length) console.error(\"Invalid face: \" + face);\r\n    return colors[face];\r\n}", "import { Cube, sq } from \"../cube\";\r\n\r\nexport function stickerToFace(sticker: number, cube: Cube): number {\r\n    return Math.floor(sticker / sq(cube.layers));\r\n}", "/**\r\n * Returns a random integer in the range [0, int)\r\n */\r\nexport function randInt(int: number) {\r\n    return Math.floor(Math.random() * int);\r\n}\r\n", "import { TrainingAlg } from \"./api\";\r\nimport { randInt } from \"./common/rand\";\r\n\r\n/**\r\n * Fisher-Yates shuffle: https://stackoverflow.com/questions/2450954/how-to-randomize-shuffle-a-javascript-array\r\n * \r\n * Mutates original array and returns the shuffled array\r\n * \r\n * @param array \r\n * @returns shuffled array\r\n */\r\nexport function shuffle(array: any[]) {\r\n    let i = array.length;\r\n\r\n    // While there remain elements to shuffle...\r\n    while (i != 0) {\r\n\r\n        // Pick a remaining element...\r\n        let r = randInt(i);\r\n        i--;\r\n\r\n        // And swap it with the current element.\r\n        let temp = array[r];\r\n        array[r] = array[i];\r\n        array[i] = temp;\r\n    }\r\n    \r\n    return array;\r\n}\r\n\r\n/**\r\n * Series produces 2, 5, 9, 14, 20, 27, 35, 44, 54, 65, 77, 80...\r\n */\r\n export function series(n: number) {\r\n    if (n <= 0) {\r\n        return 2;\r\n    }\r\n    return series(n - 1) + n + 2;\r\n}\r\n\r\n/** Mutate algs in place */\r\nexport function promoteAlg(algs: Array<TrainingAlg>) {\r\n    algs[0].Score++;\r\n    let position = series(algs[0].Score);\r\n    const threeFourths = Math.ceil(algs.length * 3 / 4);\r\n    if (position > threeFourths) {\r\n        position = threeFourths + randInt(algs.length - threeFourths);\r\n    }\r\n    move(algs, position);\r\n}\r\n\r\nexport function demoteAlg(algs: Array<TrainingAlg>) {\r\n    algs[0].Score = 0;\r\n    move(algs, series(0));\r\n}\r\n\r\n/** Move the first element of arr to position n. Mutate arr in place */\r\nfunction move(arr: Array<any>, n: number) {\r\n    const temp = arr[0];\r\n    for (let i = 0; i < n; i++) {\r\n        arr[i] = arr[i + 1];\r\n    }\r\n    arr[n] = temp;\r\n}", "import { shuffle } from \"./util\";\r\nimport { randInt } from \"./common/rand\";\r\nimport { Cube } from \"./cube\";\r\n\r\nconst U = 0;\r\nconst F = 1;\r\nconst D = 2;\r\nconst B = 3;\r\nconst L = 4;\r\nconst R = 5;\r\n\r\nconst corners = [\r\n    [U, B, L],\r\n    [U, R, B],\r\n    [U, L, F],\r\n    [U, F, R],\r\n    [D, F, L],\r\n    [D, R, F],\r\n    [D, L, B],\r\n    [D, B, R],\r\n];\r\nconst edges = [\r\n    [U, B],\r\n    [U, L],\r\n    [U, R],\r\n    [U, F],\r\n    [F, L],\r\n    [F, R],\r\n    [D, F],\r\n    [D, L],\r\n    [D, R],\r\n    [D, B],\r\n    [B, L],\r\n    [B, R],\r\n];\r\n\r\nexport function scramble3x3(cube: Cube): number[] {\r\n    let eo = orientation(12, 2);\r\n    let co = orientation(8, 3);\r\n    let cp = permutation(8);\r\n    let ep = permutation(12);\r\n    while (permutationParity(cp) !== permutationParity(ep)) {\r\n        cp = permutation(8);\r\n    }\r\n\r\n\r\n    const stickers = Array(54);\r\n\r\n    for (let i = 0; i < 6; i++) {\r\n        const center = cube.center(i);\r\n        stickers[center] = i;\r\n    }\r\n    \r\n    let uCorners = cube.corners(0, 0);\r\n    let fCorners = cube.corners(1, 0);\r\n    let dCorners = cube.corners(2, 0);\r\n    let bCorners = cube.corners(3, 0);\r\n    let lCorners = cube.corners(4, 0);\r\n    let rCorners = cube.corners(5, 0);\r\n\r\n    const fill4C = (cIndices, c1, c2, c3, c4, co1, co2, co3, co4) => {\r\n        /** ci is corner index, o is corner orientation */\r\n        const corner = (ci, o) => corners[cp[ci]][(co[ci] + o) % 3];\r\n        stickers[cIndices.topLeft] = corner(c1, co1);\r\n        stickers[cIndices.topRight] = corner(c2, co2);\r\n        stickers[cIndices.bottomLeft] = corner(c3, co3);\r\n        stickers[cIndices.bottomRight] = corner(c4, co4);\r\n    }\r\n\r\n    fill4C(uCorners, 0, 1, 2, 3, 0, 0, 0, 0);\r\n    fill4C(fCorners, 2, 3, 4, 5, 2, 1, 1, 2);\r\n    fill4C(dCorners, 4, 5, 6, 7, 0, 0, 0, 0);\r\n    fill4C(bCorners, 6, 7, 0, 1, 2, 1, 1, 2);\r\n    fill4C(lCorners, 0, 2, 6, 4, 2, 1, 1, 2);\r\n    fill4C(rCorners, 3, 1, 5, 7, 2, 1, 1, 2);\r\n\r\n    let uEdges = cube.edges(0, 0, 0);\r\n    let fEdges = cube.edges(1, 0, 0);\r\n    let dEdges = cube.edges(2, 0, 0);\r\n    let bEdges = cube.edges(3, 0, 0);\r\n    let lEdges = cube.edges(4, 0, 0);\r\n    let rEdges = cube.edges(5, 0, 0);\r\n\r\n    const fill4E = (eIndices, e1, e2, e3, e4, eo1, eo2, eo3, eo4) => {\r\n        /** ei is edge index, o is edge orientation */\r\n        const edge = (ei, o) => edges[ep[ei]][(eo[ei] + o) % 2];\r\n        stickers[eIndices.top] = edge(e1, eo1);\r\n        stickers[eIndices.left] = edge(e2, eo2);\r\n        stickers[eIndices.right] = edge(e3, eo3);\r\n        stickers[eIndices.bottom] = edge(e4, eo4);\r\n    }\r\n\r\n    fill4E(uEdges, 0, 1, 2, 3, 0, 0, 0, 0);\r\n    fill4E(fEdges, 3, 4, 5, 6, 1, 0, 0, 1);\r\n    fill4E(dEdges, 6, 7, 8, 9, 0, 0, 0, 0);\r\n    fill4E(bEdges, 9, 10, 11, 0, 1, 0, 0, 1);\r\n    fill4E(lEdges, 1, 10, 4, 7, 1, 1, 1, 1);\r\n    fill4E(rEdges, 2, 5, 11, 8, 1, 1, 1, 1);\r\n\r\n    return stickers;\r\n}\r\n\r\n/**\r\n * Returns an array of length `pieces`.\r\n * The contents of the array are numbers in the range [0, `orientations`).\r\n * The numbers in the array should sum to 0 mod `orientations`.\r\n */\r\nfunction orientation(pieces: number, orientations: number) {\r\n    const o: number[] = Array(pieces);\r\n    for (let i = 0; i < pieces; i++) {\r\n        o[i] = randInt(orientations);\r\n    }\r\n    while (!orientationValid(o, orientations)) {\r\n        const randPiece = randInt(pieces);\r\n        o[randPiece] = randInt(orientations);\r\n    }\r\n    return o;\r\n}\r\n\r\nfunction orientationValid(pieces: number[], orientations: number) {\r\n    let sum = 0;\r\n    for (let i = 0; i < pieces.length; i++) {\r\n        sum += pieces[i];\r\n    }\r\n    return sum % orientations === 0;\r\n}\r\n\r\n/**\r\n * Returns 2 things: 1) an array of numbers spanning he range [0, pieces), in random order, \r\n * and 2) a boolean indicating whether an array of pieces has permutation parity.\r\n */\r\nfunction permutation(pieces: number) {\r\n    const p: number[] = Array(pieces);\r\n    for (let i = 0; i < pieces; i++) {\r\n        p[i] = i;\r\n    }\r\n    shuffle(p);\r\n    return p;\r\n}\r\n\r\n/**\r\n * Returns a boolean indicating whether an array of pieces has permutation parity.\r\n */\r\nfunction permutationParity(pieces: number[]) {\r\n    const cpy = [...pieces];\r\n    let parity = false;\r\n    while (true) {\r\n        if (cpy[0] === 0) {\r\n            const misplaced = cpy.findIndex((value, index) => value !== index);\r\n            if (misplaced === -1) {\r\n                return parity;\r\n            }\r\n            cpy[0] = cpy[misplaced];\r\n            cpy[misplaced] = 0;\r\n            parity = !parity;\r\n        } else {\r\n            const temp = cpy[0];\r\n            cpy[0] = cpy[temp];\r\n            cpy[temp] = temp;\r\n            parity = !parity;\r\n        }\r\n    }\r\n}", "import * as colors from \"./colors\";\r\nimport { stickerToFace } from \"./common/util\";\r\nimport { scramble3x3 } from \"./scramble\";\r\n\r\nlet canvas: HTMLCanvasElement = document.querySelector(\"canvas\");\r\nlet gl: WebGLRenderingContext = canvas.getContext(\"webgl\");\r\n\r\nexport type Sticker = {\r\n    /**\r\n     * 0, 1, 2, 3, 4, 5, or 6. Indicates which face the sticker belongs to.\r\n     */\r\n    face: number,\r\n    buffer: WebGLBuffer,\r\n}\r\n\r\nexport type AnimationData = {\r\n    /**\r\n     * List of length 3.\r\n     * One of the numbers must be -1 or 1, with the sign indicating clockwise or counterclockwise.\r\n     * The other two numbers are zero.\r\n     */\r\n    axis: number[];\r\n\r\n    stickers: Sticker[];\r\n    stickersToAnimate: boolean[];\r\n}\r\n\r\nexport function setColor(sticker: Sticker, color: number[]) {\r\n    const arr = [\r\n        color[0], color[1], color[2], color[3],\r\n        color[0], color[1], color[2], color[3],\r\n        color[0], color[1], color[2], color[3],\r\n        color[0], color[1], color[2], color[3],\r\n    ];\r\n    gl.bindBuffer(gl.ARRAY_BUFFER, sticker.buffer);\r\n    gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(arr), gl.STATIC_DRAW);\r\n}\r\n\r\nexport function sq(x: number): number {\r\n    return x * x;\r\n}\r\n\r\nexport function half(x: number): number {\r\n    return Math.floor(x / 2);\r\n}\r\n\r\nexport function even(x: number): boolean {\r\n    return x % 2 == 0;\r\n}\r\n\r\nexport function stickers(layers: number): number {\r\n    return layers * layers * 6;\r\n}\r\n\r\nexport class Cube {\r\n    stickers: Sticker[];\r\n    underStickers: Sticker[];\r\n    layers: number;\r\n    affectedStickers: boolean[];\r\n    disableTurn: boolean;\r\n    clockwise: boolean;\r\n    animationQueue: AnimationData[];\r\n\r\n    constructor() {\r\n        this.animationQueue = [];\r\n    }\r\n\r\n    setColors(colors: number[][]) {\r\n        for (let i = 0; i < stickers(this.layers); i++) {\r\n            setColor(this.stickers[i], colors[i]);\r\n        }\r\n    }\r\n\r\n    solve() {\r\n        const arr = Array(stickers(this.layers));\r\n        for (let i = 0; i < stickers(this.layers); i++) {\r\n            const face = stickerToFace(i, this);\r\n            this.stickers[i].face = face;\r\n            arr[i] = colors.faceToColor(face);\r\n        }\r\n        this.setColors(arr);\r\n    }\r\n\r\n    scramble() {\r\n        if (this.layers === 3) {\r\n            this.scramble3x3();\r\n            return;\r\n        }\r\n        this.naiveScramble();\r\n    }\r\n\r\n    scramble3x3() {\r\n        const state = scramble3x3(this);\r\n        this.setCubeState(state);\r\n    }\r\n\r\n    /**\r\n     * Perform an imperfect scramble.\r\n     * I will eventually deprecate this, but this was easier to implement.\r\n     */\r\n    naiveScramble() {\r\n        let numTurns = sq(this.layers) * 10;\r\n        for (let i = 0; i < numTurns; i++) {\r\n            let axis = Math.floor(Math.random() * 3);\r\n            let layer = Math.floor(Math.random() * this.layers);\r\n            let clockwise = Math.floor(Math.random() * 1) == 0.0;\r\n            this._matchTurn(axis, layer, clockwise);\r\n        }\r\n    }\r\n\r\n    setNumOfLayers(num: number) {\r\n        this.layers = num;\r\n\r\n        this.stickers = Array(stickers(num));\r\n        this.underStickers = Array(stickers(num));\r\n        for (let i = 0; i < stickers(num); i++) {\r\n            const face = stickerToFace(i, this);\r\n\r\n            this.stickers[i] = {\r\n                face: face,\r\n                buffer: gl.createBuffer(),\r\n            };\r\n\r\n            this.underStickers[i] = {\r\n                face: face,\r\n                buffer: gl.createBuffer(),\r\n            };\r\n            setColor(this.underStickers[i], colors.BLACK);\r\n        }\r\n\r\n        this.affectedStickers = Array(stickers(num)).fill(false);\r\n    }\r\n\r\n    /**\r\n     * Return a list of numbers representing the cube state. The list will \r\n     * contain integers 0-6, with each integer corresponding to a face's color.\r\n     * 0 -> top\r\n     * 1 -> front\r\n     * 2 -> bottom\r\n     * 3 -> back\r\n     * 4 -> left\r\n     * 5 -> right\r\n     */\r\n    getCubeState(): number[] {\r\n        return this.stickers.map(sticker => sticker.face);\r\n    }\r\n\r\n    setCubeState(state: number[]) {\r\n        for (let i = 0; i < stickers(this.layers); i++) {\r\n            const color = colors.faceToColor(state[i]);\r\n            this.stickers[i].face = state[i];\r\n            setColor(this.stickers[i], color);\r\n        }\r\n    }\r\n\r\n    resetAffectedStickers() {\r\n        // If numOfLayers === 1, make all stickers true.\r\n        // Everything should be affected for 1x1.\r\n        const arr = Array(stickers(this.layers));\r\n        this.affectedStickers = arr.fill(this.layers === 1);\r\n    }\r\n\r\n    pushAnimation(axis, clockwise, prevStickers) {\r\n        let x = clockwise ? -1 : 1;\r\n        let rotationAxis = [0, 0, 0];\r\n        rotationAxis[axis] = x;\r\n\r\n        this.animationQueue.push({\r\n            axis: rotationAxis,\r\n            stickers: prevStickers,\r\n            stickersToAnimate: this.affectedStickers,\r\n        });\r\n    }\r\n\r\n    turn(axis, layer, clockwise) {\r\n        this.resetAffectedStickers();\r\n\r\n        this.pushAnimation(axis, clockwise, [...this.stickers]);\r\n\r\n        this._matchTurn(axis, layer, clockwise);\r\n    }\r\n\r\n    sliceTurn(axis, clockwise) {\r\n        const arr = Array(stickers(this.layers));\r\n        this.affectedStickers = arr.fill(false);\r\n\r\n        this.pushAnimation(axis, clockwise, [...this.stickers]);\r\n\r\n        for (let i = 1; i < this.layers - 1; i++) {\r\n            this._matchTurn(axis, i, clockwise);\r\n        }\r\n    }\r\n\r\n    wideTurn(axis, layer, clockwise) {\r\n        this.resetAffectedStickers();\r\n\r\n        this.pushAnimation(axis, clockwise, [...this.stickers]);\r\n\r\n        this._matchTurn(axis, layer, clockwise);\r\n        for (let i = 1; i < this.layers - 1; i++) {\r\n            this._matchTurn(axis, i, clockwise);\r\n        }\r\n    }\r\n\r\n    cubeRotate(axis, clockwise) {\r\n        this.resetAffectedStickers();\r\n\r\n        this.pushAnimation(axis, clockwise, [...this.stickers]);\r\n\r\n        for (let i = 0; i < this.layers; i++) {\r\n            this._matchTurn(axis, i, clockwise);\r\n        }\r\n    }\r\n\r\n    _matchTurn(axis, layer, clockwise) {\r\n        if (axis == 0) {\r\n            this._turnXAxis(layer, clockwise);\r\n            if (layer == 0) {\r\n                this._turnOuter(5, clockwise);\r\n            } else if (layer == this.layers - 1) {\r\n                this._turnOuter(4, !clockwise);\r\n            }\r\n        } else if (axis == 1) {\r\n            this._turnYAxis(layer, clockwise);\r\n            if (layer == 0) {\r\n                this._turnOuter(0, clockwise);\r\n            } else if (layer == this.layers - 1) {\r\n                this._turnOuter(2, !clockwise);\r\n            }\r\n        } else if (axis == 2) {\r\n            this._turnZAxis(layer, clockwise);\r\n            if (layer == 0) {\r\n                this._turnOuter(1, clockwise);\r\n            } else if (layer == this.layers - 1) {\r\n                this._turnOuter(3, !clockwise);\r\n            }\r\n        } else {\r\n            console.error(`Axis ${axis} not recognized`);\r\n        }\r\n    }\r\n\r\n    _turnXAxis(layer, clockwise) {\r\n        for (let i = 1; i <= this.layers; i++) {\r\n            this._cycle(\r\n                clockwise,\r\n                0 * sq(this.layers) + sq(this.layers) - i - layer * this.layers,\r\n                3 * sq(this.layers) + sq(this.layers) - i - layer * this.layers,\r\n                2 * sq(this.layers) + sq(this.layers) - i - layer * this.layers,\r\n                1 * sq(this.layers) + sq(this.layers) - i - layer * this.layers,\r\n            );\r\n        }\r\n    }\r\n\r\n    _turnYAxis(layer, clockwise) {\r\n        for (let i = 0; i < this.layers; i++) {\r\n            this._cycle(\r\n                clockwise,\r\n                1 * sq(this.layers) + i * this.layers + layer,\r\n                4 * sq(this.layers) + i * this.layers + layer,\r\n                3 * sq(this.layers) + (this.layers - i - 1) * this.layers + (this.layers - 1) - layer,\r\n                5 * sq(this.layers) + i * this.layers + layer,\r\n            );\r\n        }\r\n    }\r\n\r\n    _turnZAxis(layer, clockwise) {\r\n        for (let i = 0; i < this.layers; i++) {\r\n            this._cycle(\r\n                clockwise,\r\n                0 * sq(this.layers) + (i + 1) * this.layers - 1 - layer,\r\n                5 * sq(this.layers) + i + this.layers * layer,\r\n                2 * sq(this.layers) + (this.layers - i - 1) * this.layers + layer,\r\n                4 * sq(this.layers) + sq(this.layers) - (i + 1) - layer * this.layers,\r\n            );\r\n        }\r\n    }\r\n\r\n    _turnOuter(face, clockwise) {\r\n        if (this.layers % 2 != 0) {\r\n            let center = this.center(face);\r\n            this.affectedStickers[center] = true;\r\n        }\r\n\r\n        for (let i = 0; i < Math.floor(this.layers / 2); i++) {\r\n            const { topLeft, topRight, bottomLeft, bottomRight } = this.corners(face, i);\r\n\r\n            this._cycle(clockwise, topLeft, topRight, bottomRight, bottomLeft);\r\n\r\n            let numEdges = this.layers - 2 * (i + 1);\r\n            for (let j = 0; j < numEdges; j++) {\r\n                const { top, left, bottom, right } = this.edges(face, i, j);\r\n                this._cycle(clockwise, top, right, bottom, left);\r\n            }\r\n        }\r\n    }\r\n\r\n    _cycle(clockwise, i1, i2, i3, i4) {\r\n        this.affectedStickers[i1] = true;\r\n        this.affectedStickers[i2] = true;\r\n        this.affectedStickers[i3] = true;\r\n        this.affectedStickers[i4] = true;\r\n\r\n        if (clockwise) {\r\n            this._cycleHelper(i1, i2, i3, i4);\r\n        } else {\r\n            this._cycleHelper(i4, i3, i2, i1);\r\n        }\r\n    }\r\n\r\n    _cycleHelper(i1, i2, i3, i4) {\r\n        let temp = this.stickers[i4];\r\n        this.stickers[i4] = this.stickers[i3];\r\n        this.stickers[i3] = this.stickers[i2];\r\n        this.stickers[i2] = this.stickers[i1];\r\n        this.stickers[i1] = temp;\r\n    }\r\n\r\n    /**\r\n     * Why use KeyboardEvent.code instead of KeyboardEvent.key?\r\n     * 1) `key` is dependent on \"the state of modifier keys such as Shift as well as the keyboard locale and layout.\"\r\n     * 2) `code` is useful when you want to handle keys based on their physical positions. This is common for games.\r\n     * \r\n     * https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/key\r\n     * https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/code\r\n     */\r\n    matchKeyToTurn(event: KeyboardEvent) {\r\n        if (this.disableTurn) return;\r\n\r\n        // Don't turn if the user is holding down ctrl\r\n        // E.g., the user might be using Ctrl + Shift + R to refresh the page or Ctrl + Shift + I to open the dev tools\r\n        if (event.ctrlKey) return;\r\n\r\n        const code = event.code;\r\n\r\n        switch (code) {\r\n            case \"KeyN\":\r\n                this.cubeRotate(0, true);\r\n                return { notation: \"x\", rotate: true };\r\n            case \"KeyB\":\r\n                this.cubeRotate(0, false);\r\n                return { notation: \"x'\", rotate: true };\r\n            case \"Semicolon\":\r\n                this.cubeRotate(1, true);\r\n                return { notation: \"y\", rotate: true };\r\n            case \"KeyA\":\r\n                this.cubeRotate(1, false);\r\n                return { notation: \"y'\", rotate: true };\r\n            case \"KeyP\":\r\n                this.cubeRotate(2, true);\r\n                return { notation: \"z\", rotate: true };\r\n            case \"KeyQ\":\r\n                this.cubeRotate(2, false);\r\n                return { notation: \"z'\", rotate: true };\r\n            case \"KeyJ\":\r\n                this.turn(1, 0, true);\r\n                return { notation: \"U\", turn: true };\r\n            case \"KeyF\":\r\n                this.turn(1, 0, false);\r\n                return { notation: \"U'\", turn: true };\r\n            case \"KeyS\":\r\n                this.turn(1, this.layers - 1, false);\r\n                return { notation: \"D\", turn: true };\r\n            case \"KeyL\":\r\n                this.turn(1, this.layers - 1, true);\r\n                return { notation: \"D'\", turn: true };\r\n            case \"KeyH\":\r\n                this.turn(2, 0, true);\r\n                return { notation: \"F\", turn: true };\r\n            case \"KeyG\":\r\n                this.turn(2, 0, false);\r\n                return { notation: \"F'\", turn: true };\r\n            case \"KeyW\":\r\n                this.turn(2, this.layers - 1, false);\r\n                return { notation: \"B\", turn: true };\r\n            case \"KeyO\":\r\n                this.turn(2, this.layers - 1, true);\r\n                return { notation: \"B'\", turn: true };\r\n            case \"KeyD\":\r\n                this.turn(0, this.layers - 1, false);\r\n                return { notation: \"L\", turn: true };\r\n            case \"KeyE\":\r\n                this.turn(0, this.layers - 1, true);\r\n                return { notation: \"L'\", turn: true };\r\n            case \"KeyI\":\r\n                this.turn(0, 0, true);\r\n                return { notation: \"R\", turn: true };\r\n            case \"KeyK\":\r\n                this.turn(0, 0, false);\r\n                return { notation: \"R'\", turn: true };\r\n            case \"BracketLeft\":\r\n                this.sliceTurn(0, false);\r\n                return { notation: \"M\", turn: true };\r\n            case \"Quote\":\r\n                this.sliceTurn(0, true);\r\n                return { notation: \"M'\", turn: true };\r\n            case \"KeyC\":\r\n                this.sliceTurn(1, false);\r\n                return { notation: \"E\", turn: true };\r\n            case \"Comma\":\r\n                this.sliceTurn(1, true);\r\n                return { notation: \"E'\", turn: true };\r\n            case \"KeyY\":\r\n                this.sliceTurn(2, true);\r\n                return { notation: \"S\", turn: true };\r\n            case \"KeyT\":\r\n                this.sliceTurn(2, false);\r\n                return { notation: \"S'\", turn: true };\r\n            case \"KeyU\":\r\n                this.wideTurn(0, 0, true);\r\n                return { notation: \"r\", turn: true };\r\n            case \"KeyM\":\r\n                this.wideTurn(0, 0, false);\r\n                return { notation: \"r'\", turn: true };\r\n            case \"KeyV\":\r\n                this.wideTurn(0, this.layers - 1, false);\r\n                return { notation: \"l\", turn: true };\r\n            case \"KeyR\":\r\n                this.wideTurn(0, this.layers - 1, true);\r\n                return { notation: \"l'\", turn: true };\r\n        }\r\n\r\n        return;\r\n    }\r\n\r\n    stepAlgorithm(move: string, forward: boolean) {\r\n        switch (move) {\r\n            case \"x\":\r\n                this.cubeRotate(0, forward);\r\n                break;\r\n            case \"x'\":\r\n                this.cubeRotate(0, !forward);\r\n                break;\r\n            case \"x2\":\r\n            case \"x2'\":\r\n                this.cubeRotate(0, forward);\r\n                this.cubeRotate(0, forward);\r\n                break;\r\n            case \"y\":\r\n                this.cubeRotate(1, forward);\r\n                break;\r\n            case \"y'\":\r\n                this.cubeRotate(1, !forward);\r\n                break;\r\n            case \"y2\":\r\n            case \"y2'\":\r\n                this.cubeRotate(1, forward);\r\n                this.cubeRotate(1, forward);\r\n                break;\r\n            case \"z\":\r\n                this.cubeRotate(2, forward);\r\n                break;\r\n            case \"z'\":\r\n                this.cubeRotate(2, !forward);\r\n                break;\r\n            case \"z2\":\r\n            case \"z2'\":\r\n                this.cubeRotate(2, forward);\r\n                this.cubeRotate(2, forward);\r\n                break;\r\n            case \"U\":\r\n                this.turn(1, 0, forward);\r\n                break;\r\n            case \"U'\":\r\n                this.turn(1, 0, !forward);\r\n                break;\r\n            case \"U2\":\r\n            case \"U2'\":\r\n                this.turn(1, 0, forward);\r\n                this.turn(1, 0, forward);\r\n                break;\r\n            case \"u\":\r\n                this.wideTurn(1, 0, forward);\r\n                break;\r\n            case \"u'\":\r\n                this.wideTurn(1, 0, !forward);\r\n                break;\r\n            case \"u2\":\r\n            case \"u2'\":\r\n                this.wideTurn(1, 0, forward);\r\n                this.wideTurn(1, 0, forward);\r\n                break;\r\n            case \"D\":\r\n                this.turn(1, this.layers - 1, !forward);\r\n                break;\r\n            case \"D'\":\r\n                this.turn(1, this.layers - 1, forward);\r\n                break;\r\n            case \"D2\":\r\n            case \"D2'\":\r\n                this.turn(1, this.layers - 1, forward);\r\n                this.turn(1, this.layers - 1, forward);\r\n                break;\r\n            case \"d\":\r\n                this.wideTurn(1, this.layers - 1, !forward);\r\n                break;\r\n            case \"d'\":\r\n                this.wideTurn(1, this.layers - 1, forward);\r\n                break;\r\n            case \"d2\":\r\n            case \"d2'\":\r\n                this.wideTurn(1, this.layers - 1, forward);\r\n                this.wideTurn(1, this.layers - 1, forward);\r\n                break;\r\n            case \"F\":\r\n                this.turn(2, 0, forward);\r\n                break;\r\n            case \"F'\":\r\n                this.turn(2, 0, !forward);\r\n                break;\r\n            case \"F2\":\r\n            case \"F2'\":\r\n                this.turn(2, 0, forward);\r\n                this.turn(2, 0, forward);\r\n                break;\r\n            case \"f\":\r\n                this.wideTurn(2, 0, forward);\r\n                break;\r\n            case \"f'\":\r\n                this.wideTurn(2, 0, !forward);\r\n                break;\r\n            case \"f2\":\r\n            case \"f2'\":\r\n                this.wideTurn(2, 0, forward);\r\n                this.wideTurn(2, 0, forward);\r\n                break;\r\n            case \"B\":\r\n                this.turn(2, this.layers - 1, !forward);\r\n                break;\r\n            case \"B'\":\r\n                this.turn(2, this.layers - 1, forward);\r\n                break\r\n            case \"B2\":\r\n            case \"B2'\":\r\n                this.turn(2, this.layers - 1, forward);\r\n                this.turn(2, this.layers - 1, forward);\r\n                break\r\n            case \"b\":\r\n                this.wideTurn(2, this.layers - 1, !forward);\r\n                break;\r\n            case \"b'\":\r\n                this.wideTurn(2, this.layers - 1, forward);\r\n                break;\r\n            case \"b2\":\r\n            case \"b2'\":\r\n                this.wideTurn(2, this.layers - 1, forward);\r\n                this.wideTurn(2, this.layers - 1, forward);\r\n                break;\r\n            case \"L\":\r\n                this.turn(0, this.layers - 1, !forward);\r\n                break;\r\n            case \"L'\":\r\n                this.turn(0, this.layers - 1, forward);\r\n                break;\r\n            case \"L2\":\r\n            case \"L2'\":\r\n                this.turn(0, this.layers - 1, forward);\r\n                this.turn(0, this.layers - 1, forward);\r\n                break;\r\n            case \"l\":\r\n                this.wideTurn(0, this.layers - 1, !forward);\r\n                break;\r\n            case \"l'\":\r\n                this.wideTurn(0, this.layers - 1, forward);\r\n                break;\r\n            case \"l2\":\r\n            case \"l2'\":\r\n                this.wideTurn(0, this.layers - 1, forward);\r\n                this.wideTurn(0, this.layers - 1, forward);\r\n                break;\r\n            case \"R\":\r\n                this.turn(0, 0, forward);\r\n                break;\r\n            case \"R'\":\r\n                this.turn(0, 0, !forward);\r\n                break;\r\n            case \"R2\":\r\n            case \"R2'\":\r\n                this.turn(0, 0, forward);\r\n                this.turn(0, 0, forward);\r\n                break;\r\n            case \"r\":\r\n                this.wideTurn(0, 0, forward);\r\n                break;\r\n            case \"r'\":\r\n                this.wideTurn(0, 0, !forward);\r\n                break;\r\n            case \"r2\":\r\n            case \"r2'\":\r\n                this.wideTurn(0, 0, forward);\r\n                this.wideTurn(0, 0, forward);\r\n                break;\r\n            case \"M\":\r\n                this.turn(0, 1, !forward);\r\n                break;\r\n            case \"M'\":\r\n                this.turn(0, 1, forward);\r\n                break;\r\n            case \"M2\":\r\n            case \"M2'\":\r\n                this.sliceTurn(0, forward);\r\n                this.sliceTurn(0, forward);\r\n                break;\r\n            case \"E\":\r\n                this.sliceTurn(1, !forward);\r\n                break;\r\n            case \"E'\":\r\n                this.sliceTurn(1, forward);\r\n                break;\r\n            case \"E2\":\r\n            case \"E2'\":\r\n                this.sliceTurn(1, forward);\r\n                this.sliceTurn(1, forward);\r\n                break;\r\n            case \"S\":\r\n                this.sliceTurn(2, forward);\r\n                break;\r\n            case \"S'\":\r\n                this.sliceTurn(2, !forward);\r\n                break;\r\n            case \"S2\":\r\n            case \"S2'\":\r\n                this.sliceTurn(2, forward);\r\n            default:\r\n                throw new Error(\"Invalid turn in algorithm: \" + move);\r\n        }\r\n    }\r\n\r\n    execAlg(alg: string) {\r\n        if (!alg) return;\r\n\r\n        let moves = alg.split(\" \");\r\n        for (let i = 0; i < moves.length; i++) {\r\n            this.stepAlgorithm(moves[i], true);\r\n        }\r\n\r\n        // Clear the animation queue so that all the turns don't get animated\r\n        this.animationQueue = [];\r\n    }\r\n\r\n    execAlgReverse(alg: string) {\r\n        if (!alg) return;\r\n\r\n        let moves = alg.split(\" \");\r\n        for (let i = moves.length - 1; i >= 0; i--) {\r\n            this.stepAlgorithm(moves[i], false);\r\n        }\r\n\r\n        // Clear the animation queue so that all the turns don't get animated\r\n        this.animationQueue = [];\r\n    }\r\n\r\n    stickerIsOnFace(sticker: number, face: number) {\r\n        return face * sq(this.layers) <= sticker && sticker < (face + 1) * sq(this.layers);\r\n    }\r\n\r\n    center(face: number) {\r\n        return face * sq(this.layers) + Math.floor(sq(this.layers) / 2);\r\n    }\r\n\r\n    corners(face: number, layer: number) {\r\n        const offset = face * sq(this.layers);\r\n        return {\r\n            topLeft: offset + (this.layers + 1) * layer,\r\n            topRight: offset + (this.layers - 1) * (this.layers - layer),\r\n            bottomRight: offset + (this.layers + 1) * (this.layers - layer - 1),\r\n            bottomLeft: offset + (this.layers - 1) * (layer + 1),\r\n        };\r\n    }\r\n\r\n    edges(face: number, corner: number, edge: number) {\r\n        const corners = this.corners(face, corner);\r\n        let numEdges = this.layers - 2 * (corner + 1);\r\n        return {\r\n            top: corners.topLeft + this.layers * (edge + 1),\r\n            left: corners.topLeft + (numEdges - edge),\r\n            right: corners.topRight + edge + 1,\r\n            bottom: corners.bottomLeft + this.layers * (numEdges - edge),\r\n        };\r\n    }\r\n}", "import { Cube, even, half, sq, stickers } from \"./cube\";\r\n\r\nexport type BufferObject = {\r\n    positionBuffer: WebGLBuffer,\r\n    noGapPositionBuffer: WebGLBuffer,\r\n    hintPositionBuffer: WebGLBuffer,\r\n    indexBuffer: WebGLBuffer,\r\n    cart2d: number[],\r\n\r\n    // For debugging purposes\r\n    positions: Float32Array,\r\n}\r\n\r\ntype Axis = 0 | 1 | 2;\r\n\r\nexport function createBuffers(gl: WebGLRenderingContext, cube: Cube, perspectiveMatrix: number[]): BufferObject[] {\r\n    // Vertex positions with gap between stickers\r\n    let allPositions = makePositions(cube, 1.01, 0.02)\r\n\r\n    // Vertex positions with no gap so user can drag between stickers\r\n    let allNoGapPositions = makePositions(cube, 1.0, 0.0);\r\n\r\n    // Vertex positions of hint stickers\r\n    let allHintPositions = makePositions(cube, 1.5, 0.02);\r\n\r\n    const objects = Array(stickers(cube.layers));\r\n    for (let i = 0; i < stickers(cube.layers); i++) {\r\n        let object: BufferObject = {\r\n            positionBuffer: gl.createBuffer(),\r\n            noGapPositionBuffer: gl.createBuffer(),\r\n            hintPositionBuffer: gl.createBuffer(),\r\n            indexBuffer: gl.createBuffer(),\r\n            cart2d: [],\r\n            positions: null,\r\n        };\r\n\r\n        let positions = new Float32Array(12);\r\n        let noGapPos = new Float32Array(12);\r\n        let hintPos = new Float32Array(12);\r\n        for (let j = 0; j < 12; j++) {\r\n            let index = i * 12 + j;\r\n            positions[j] = allPositions[index];\r\n            noGapPos[j] = allNoGapPositions[index];\r\n            hintPos[j] = allHintPositions[index];\r\n        }\r\n\r\n        gl.bindBuffer(gl.ARRAY_BUFFER, object.positionBuffer);\r\n        gl.bufferData(gl.ARRAY_BUFFER, positions, gl.STATIC_DRAW);\r\n        object.positions = positions;\r\n\r\n        gl.bindBuffer(gl.ARRAY_BUFFER, object.noGapPositionBuffer);\r\n        gl.bufferData(gl.ARRAY_BUFFER, noGapPos, gl.STATIC_DRAW);\r\n\r\n        gl.bindBuffer(gl.ARRAY_BUFFER, object.hintPositionBuffer);\r\n        gl.bufferData(gl.ARRAY_BUFFER, hintPos, gl.STATIC_DRAW);\r\n\r\n        const homo = Array(16);\r\n        multiply(homo, 0, perspectiveMatrix, [noGapPos[0], noGapPos[1], noGapPos[2], 1]);\r\n        multiply(homo, 4, perspectiveMatrix, [noGapPos[3], noGapPos[4], noGapPos[5], 1]);\r\n        multiply(homo, 8, perspectiveMatrix, [noGapPos[6], noGapPos[7], noGapPos[8], 1]);\r\n        multiply(homo, 12, perspectiveMatrix, [noGapPos[9], noGapPos[10], noGapPos[11], 1]);\r\n\r\n        // Represent as 2D cartesian coordinates by dividing x and y by w\r\n        object.cart2d = [\r\n            homo[0] / homo[3], homo[1] / homo[3],\r\n            homo[4] / homo[7], homo[5] / homo[7],\r\n            homo[8] / homo[11], homo[9] / homo[11],\r\n            homo[12] / homo[15], homo[13] / homo[15],\r\n        ];\r\n\r\n        // Define each face as two triangles.\r\n        // Given vertices A, B, C, and D, we define triangles ABC and ACD.\r\n        const indices = [0, 1, 2, 0, 2, 3];\r\n\r\n        gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, object.indexBuffer);\r\n        gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, new Uint16Array(indices), gl.STATIC_DRAW);\r\n\r\n        objects[i] = object;\r\n    }\r\n\r\n    return objects;\r\n}\r\n\r\n/**\r\n * Multiply a 4x4 matrix with a 4x1 matrix, resulting in a 4x1 matrix.\r\n *\r\n * @param arr destination, 4x1 matrix\r\n * @param offset offset\r\n * @param a first operand, 4x4 matrix\r\n * @param b second operand, 4x1 matrix\r\n */\r\nfunction multiply(arr: number[], offset: number, a: number[], b: number[]) {\r\n    const out = Array(4);\r\n    let b0 = b[0],\r\n        b1 = b[1],\r\n        b2 = b[2],\r\n        b3 = b[3];\r\n    arr[offset + 0] = b0 * a[0] + b1 * a[4] + b2 * a[8] + b3 * a[12];\r\n    arr[offset + 1] = b0 * a[1] + b1 * a[5] + b2 * a[9] + b3 * a[13];\r\n    arr[offset + 2] = b0 * a[2] + b1 * a[6] + b2 * a[10] + b3 * a[14];\r\n    arr[offset + 3] = b0 * a[3] + b1 * a[7] + b2 * a[11] + b3 * a[15];\r\n}\r\n\r\nconst perSticker: number = 12;\r\nconst verticesInSquare: number = 4;\r\nconst dimensions: number = 3;\r\n\r\n/** Array of length 648 */\r\nfunction makePositions(cube: Cube, radius: number, gap: number) {\r\n    const perFace = sq(cube.layers) * perSticker;\r\n    const out = Array(6 * perFace);\r\n    topFace(out, 0 * perFace, cube, 1, radius, gap);\r\n    frontFace(out, 1 * perFace, cube, 0, radius, gap);\r\n    bottomFace(out, 2 * perFace, cube, 1, -radius, gap);\r\n    backFace(out, 3 * perFace, cube, 0, -radius, gap);\r\n    leftFace(out, 4 * perFace, cube, 2, -radius, gap);\r\n    rightFace(out, 5 * perFace, cube, 2, radius, gap);\r\n    return out;\r\n}\r\n\r\n// Notes for face functions\r\n//\r\n// 0 3 6\r\n// 1 4 7\r\n// 2 5 8\r\n\r\nfunction topFace(arr: number[], offset: number, cube: Cube, a: Axis, r: number, gap: number) {\r\n    if (even(cube.layers)) {\r\n        let coords = Array(sq(cube.layers));\r\n        let idx = 0;\r\n        for (let i = 0; i < cube.layers; i++) {\r\n            for (let j = 0; j < cube.layers; j++) {\r\n                const x = -1 + 1 / cube.layers + j * 2 / cube.layers;\r\n                const y = -1 + 1 / cube.layers + i * 2 / cube.layers;\r\n                coords[idx] = [x, y, r];\r\n                idx++;\r\n            }\r\n        }\r\n        makeFace(arr, offset, cube, coords, a, gap);\r\n        return;\r\n    }\r\n\r\n    let coords = Array(sq(cube.layers));\r\n    let idx = 0;\r\n    for (let i = -half(cube.layers); i <= half(cube.layers); i++) {\r\n        for (let j = -half(cube.layers); j <= half(cube.layers); j++) {\r\n            coords[idx] = [2.0 * j / cube.layers, 2.0 * i / cube.layers, r];\r\n            idx++;\r\n        }\r\n    }\r\n    makeFace(arr, offset, cube, coords, a, gap);\r\n}\r\n\r\nfunction frontFace(arr: number[], offset: number, cube: Cube, a: Axis, r: number, gap: number) {\r\n    if (even(cube.layers)) {\r\n        let coords = Array(sq(cube.layers));\r\n        let idx = 0;\r\n        for (let i = 0; i < cube.layers; i++) {\r\n            for (let j = cube.layers - 1; j >= 0; j--) {\r\n                const x = -1 + 1 / cube.layers + i * 2 / cube.layers;\r\n                const y = -1 + 1 / cube.layers + j * 2 / cube.layers;\r\n                coords[idx] = [x, y, r];\r\n                idx++;\r\n            }\r\n        }\r\n        makeFace(arr, offset, cube, coords, a, gap);\r\n        return;\r\n    }\r\n\r\n    let coords = Array(sq(cube.layers));\r\n    let idx = 0;\r\n    for (let i = -half(cube.layers); i <= half(cube.layers); i++) {\r\n        for (let j = half(cube.layers); j >= -half(cube.layers); j--) {\r\n            coords[idx] = [2.0 * i / cube.layers, 2.0 * j / cube.layers, r];\r\n            idx++;\r\n        }\r\n    }\r\n    makeFace(arr, offset, cube, coords, a, gap);\r\n}\r\n\r\nfunction bottomFace(arr: number[], offset: number, cube: Cube, a: Axis, r: number, gap: number) {\r\n    if (even(cube.layers)) {\r\n        let coords = Array(sq(cube.layers));\r\n        let idx = 0;\r\n        for (let i = 0; i < cube.layers; i++) {\r\n            for (let j = cube.layers - 1; j >= 0; j--) {\r\n                const x = -1 + 1 / cube.layers + j * 2 / cube.layers;\r\n                const y = -1 + 1 / cube.layers + i * 2 / cube.layers;\r\n                coords[idx] = [x, y, r];\r\n                idx++;\r\n            }\r\n        }\r\n        makeFace(arr, offset, cube, coords, a, gap);\r\n        return;\r\n    }\r\n\r\n    let coords = Array(sq(cube.layers));\r\n    let idx = 0;\r\n    for (let i = -half(cube.layers); i <= half(cube.layers); i++) {\r\n        for (let j = half(cube.layers); j >= -half(cube.layers); j--) {\r\n            coords[idx] = [2.0 * j / cube.layers, 2.0 * i / cube.layers, r];\r\n            idx++;\r\n        }\r\n    }\r\n    makeFace(arr, offset, cube, coords, a, gap);\r\n}\r\n\r\nfunction backFace(arr: number[], offset: number, cube: Cube, a: Axis, r: number, gap: number) {\r\n    if (even(cube.layers)) {\r\n        let coords = Array(sq(cube.layers));\r\n        let idx = 0;\r\n        for (let i = 0; i < cube.layers; i++) {\r\n            for (let j = 0; j < cube.layers; j++) {\r\n                const x = -1 + 1 / cube.layers + i * 2 / cube.layers;\r\n                const y = -1 + 1 / cube.layers + j * 2 / cube.layers;\r\n                coords[idx] = [x, y, r];\r\n                idx++;\r\n            }\r\n        }\r\n        makeFace(arr, offset, cube, coords, a, gap);\r\n        return;\r\n    }\r\n\r\n    let coords = Array(sq(cube.layers));\r\n    let idx = 0;\r\n    for (let i = -half(cube.layers); i <= half(cube.layers); i++) {\r\n        for (let j = -half(cube.layers); j <= half(cube.layers); j++) {\r\n            coords[idx] = [2.0 * i / cube.layers, 2.0 * j / cube.layers, r];\r\n            idx++;\r\n        }\r\n    }\r\n    makeFace(arr, offset, cube, coords, a, gap);\r\n}\r\n\r\nfunction leftFace(arr: number[], offset: number, cube: Cube, a: Axis, r: number, gap: number) {\r\n    if (even(cube.layers)) {\r\n        let coords = Array(sq(cube.layers));\r\n        let idx = 0;\r\n        for (let i = 0; i < cube.layers; i++) {\r\n            for (let j = cube.layers - 1; j >= 0; j--) {\r\n                const x = -1 + 1 / cube.layers + j * 2 / cube.layers;\r\n                const y = -1 + 1 / cube.layers + i * 2 / cube.layers;\r\n                coords[idx] = [x, y, r];\r\n                idx++;\r\n            }\r\n        }\r\n        makeFace(arr, offset, cube, coords, a, gap);\r\n        return;\r\n    }\r\n\r\n    let coords = Array(sq(cube.layers));\r\n    let idx = 0;\r\n    for (let i = -half(cube.layers); i <= half(cube.layers); i++) {\r\n        for (let j = half(cube.layers); j >= -half(cube.layers); j--) {\r\n            coords[idx] = [2.0 * j / cube.layers, 2.0 * i / cube.layers, r];\r\n            idx++;\r\n        }\r\n    }\r\n    makeFace(arr, offset, cube, coords, a, gap);\r\n}\r\n\r\nfunction rightFace(arr: number[], offset: number, cube: Cube, a: Axis, r: number, gap: number) {\r\n    if (even(cube.layers)) {\r\n        let coords = Array(sq(cube.layers));\r\n        let idx = 0;\r\n        for (let i = cube.layers - 1; i >= 0; i--) {\r\n            for (let j = cube.layers - 1; j >= 0; j--) {\r\n                const x = -1 + 1 / cube.layers + j * 2 / cube.layers;\r\n                const y = -1 + 1 / cube.layers + i * 2 / cube.layers;\r\n                coords[idx] = [x, y, r];\r\n                idx++;\r\n            }\r\n        }\r\n        makeFace(arr, offset, cube, coords, a, gap);\r\n        return;\r\n    }\r\n\r\n    let coords = Array(sq(cube.layers));\r\n    let idx = 0;\r\n    for (let i = half(cube.layers); i >= -half(cube.layers); i--) {\r\n        for (let j = half(cube.layers); j >= -half(cube.layers); j--) {\r\n            coords[idx] = [2.0 * j / cube.layers, 2.0 * i / cube.layers, r];\r\n            idx++;\r\n        }\r\n    }\r\n    makeFace(arr, offset, cube, coords, a, gap);\r\n}\r\n\r\nfunction makeFace(arr: number[], offset: number, cube: Cube, coords: number[], a: Axis, gap: number) {\r\n    for (let i = 0; i < sq(cube.layers); i++) {\r\n        const temp = coords[i];\r\n        makeSticker(arr, offset + i * perSticker, cube, temp[0], temp[1], temp[2], a, gap);\r\n    }\r\n}\r\n\r\nfunction makeSticker(arr: number[], offset: number, cube: Cube, x: number, y: number, r: number, a: Axis, gap: number) {\r\n    const s = (1.0 / cube.layers) - gap;\r\n\r\n    const coords = [\r\n        [x - s, y - s, r],\r\n        [x + s, y - s, r],\r\n        [x + s, y + s, r],\r\n        [x - s, y + s, r],\r\n    ];\r\n\r\n    for (let i = 0; i < verticesInSquare; i++) {\r\n        const temp = coords[i];\r\n        arr[offset + i * dimensions] = temp[(a + 0) % dimensions];\r\n        arr[offset + i * dimensions + 1] = temp[(a + 1) % dimensions];\r\n        arr[offset + i * dimensions + 2] = temp[(a + 2) % dimensions];\r\n    }\r\n}", "// spring constant\r\nconst k = 100;\r\n\r\n// friction constant\r\nconst f = 15;\r\n\r\n/**\r\n * This class is used to animate a value from one state to another.\r\n * It is based on the spring physics model.\r\n */\r\nexport class Spring {\r\n    position: number;\r\n    _velocity: number;\r\n    _acceleration: number;\r\n\r\n    // set this to specify the target position\r\n    target: number;\r\n\r\n    constructor() {\r\n        this.position = 0;\r\n        this._velocity = 200;\r\n        this._acceleration = 0;\r\n\r\n        this.target = 0;\r\n    }\r\n\r\n    update(dt: number) {\r\n        const springF = -k * (this.position - this.target);\r\n        const dampingF = -f * this._velocity;\r\n\r\n        this._acceleration = springF + dampingF;\r\n\r\n        // v = v0 + at\r\n        this._velocity += this._acceleration * dt;\r\n\r\n        // x = x0 + vt\r\n        this.position += this._velocity * dt;\r\n    }\r\n}", "import { BufferObject } from \"./buffers\";\r\nimport { Cube, sq } from \"./cube\";\r\n\r\n/**\r\n * Translate coordinate from pixels (relative to canvas) to clipping space\r\n */\r\nfunction xPixelToClip(val: number, canvasSize: number) {\r\n    return val / canvasSize * 2 - 1;\r\n}\r\n\r\n/**\r\n * Translate coordinate from pixels (relative to canvas) to clipping space\r\n */\r\nfunction yPixelToClip(val: number, canvasSize: number) {\r\n    return 1 - val / canvasSize * 2;\r\n}\r\n\r\nfunction calcSlope(x1: number, y1: number, x2: number, y2: number) {\r\n    if (x1 < x2) {\r\n        return (y2 - y1) / (x2 - x1);\r\n    }\r\n    return (y1 - y2) / (x1 - x2);\r\n}\r\n\r\nfunction areaTriangle(x1: number, y1: number, x2: number, y2: number, x3: number, y3: number) {\r\n    return Math.abs(0.5 * (x1 * (y2 - y3) + x2 * (y3 - y1) + x3 * (y1 - y2)));\r\n}\r\n\r\nfunction topRow(cube: Cube, sticker: number) {\r\n    return cube.layers - 1 - sticker % cube.layers;\r\n}\r\n\r\nfunction topColumn(cube: Cube, sticker: number) {\r\n    return cube.layers - 1 - Math.floor(sticker / cube.layers);\r\n}\r\n\r\nfunction frontRow(cube: Cube, sticker: number) {\r\n    return sticker % cube.layers;\r\n}\r\n\r\nfunction frontColumn(cube: Cube, sticker: number) {\r\n    return cube.layers - 1 - Math.floor((sticker - sq(cube.layers)) / cube.layers);\r\n}\r\n\r\nexport class DragDetector {\r\n    numOfPointerMoves: number;\r\n    xOnDown: number;\r\n    yOnDown: number;\r\n    xOnMove: number;\r\n    yOnMove: number;\r\n    stickerOnDown: number;\r\n    cart2dOnDown: number[];\r\n\r\n    /**\r\n     * x and y are pixel values.\r\n     */\r\n    onPointerDown(x: number, y: number, div: HTMLElement, cube: Cube, buffers: BufferObject[]) {\r\n        this.numOfPointerMoves = 0;\r\n\r\n        const clipX = xPixelToClip(x, div.clientWidth);\r\n        const clipY = yPixelToClip(y, div.clientHeight);\r\n        this.xOnDown = clipX;\r\n        this.yOnDown = clipY;\r\n\r\n        [this.stickerOnDown, this.cart2dOnDown] = this._coordinatesToSticker(clipX, clipY, cube, buffers);\r\n\r\n        function getXY(objectIndex: number, xIndex: number, yIndex: number) {\r\n            return {\r\n                x: buffers[objectIndex].cart2d[xIndex],\r\n                y: buffers[objectIndex].cart2d[yIndex],\r\n            }\r\n        }\r\n\r\n        if (this.stickerOnDown !== -1) return;\r\n\r\n        const topLeft = getXY(0, 0, 1);\r\n        const topRight = getXY(cube.layers * (cube.layers - 1), 6, 7);\r\n        const left = getXY(cube.layers - 1, 2, 3);\r\n        const right = getXY(sq(cube.layers) - 1, 4, 5);\r\n        const bottomLeft = getXY(cube.layers * (cube.layers + 1) - 1, 0, 1);\r\n        const bottomRight = getXY(sq(cube.layers) * 2 - 1, 2, 3);\r\n        if (clipY > topLeft.y && clipX > topLeft.x && clipX < topRight.x) {\r\n            cube.cubeRotate(0, true);\r\n        } else if (clipX < topLeft.x && clipY > left.y && clipY < topLeft.y) {\r\n            cube.cubeRotate(2, false);\r\n        } else if (clipX > topRight.x && clipY > right.y && clipY < topRight.y) {\r\n            cube.cubeRotate(2, true);\r\n        } else if (clipX < bottomLeft.x && clipY > bottomLeft.y && clipY < left.y) {\r\n            cube.cubeRotate(1, true);\r\n        } else if (clipX > bottomRight.x && clipY > bottomRight.y && clipY < right.y) {\r\n            cube.cubeRotate(1, false);\r\n        } else if (clipY < bottomLeft.y && clipX > bottomLeft.x && clipX < bottomRight.x) {\r\n            cube.cubeRotate(0, false);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * x and y are pixel values.\r\n     */\r\n    onPointerMove(x: number, y: number) {\r\n        this.numOfPointerMoves++;\r\n        this.xOnMove = x;\r\n        this.yOnMove = y;\r\n    }\r\n\r\n    onPointerUp(div: HTMLElement, cube: Cube, buffers: BufferObject[]) {\r\n        // Do nothing if the pointer movement was tiny.\r\n        if (this.numOfPointerMoves < 2) return;\r\n\r\n        let posSlope, negSlope;\r\n        if (this.stickerOnDown !== -1) {\r\n            posSlope = calcSlope(this.cart2dOnDown[0], this.cart2dOnDown[1], this.cart2dOnDown[4], this.cart2dOnDown[5]);\r\n            negSlope = calcSlope(this.cart2dOnDown[2], this.cart2dOnDown[3], this.cart2dOnDown[6], this.cart2dOnDown[7]);\r\n            if (posSlope < 0) {\r\n                const temp = posSlope;\r\n                posSlope = negSlope;\r\n                negSlope = temp;\r\n            }\r\n        }\r\n\r\n        const xClip = xPixelToClip(this.xOnMove, div.clientWidth);\r\n        const yClip = yPixelToClip(this.yOnMove, div.clientHeight);\r\n\r\n        const slope = calcSlope(xClip, yClip, this.xOnDown, this.yOnDown);\r\n\r\n        if (cube.stickerIsOnFace(this.stickerOnDown, 0)) {\r\n            if (xClip === this.xOnDown) {\r\n                cube.turn(0, topColumn(cube, this.stickerOnDown), yClip > this.yOnDown);\r\n            } else {\r\n                if (slope > posSlope) {\r\n                    cube.turn(0, topColumn(cube, this.stickerOnDown), xClip > this.xOnDown);\r\n                } else if (slope < negSlope) {\r\n                    cube.turn(0, topColumn(cube, this.stickerOnDown), xClip < this.xOnDown);\r\n                } else {\r\n                    cube.turn(2, topRow(cube, this.stickerOnDown), xClip > this.xOnDown);\r\n                }\r\n            }\r\n        } else if (cube.stickerIsOnFace(this.stickerOnDown, 1)) {\r\n            if (xClip === this.xOnDown) {\r\n                cube.turn(0, frontColumn(cube, this.stickerOnDown), yClip > this.yOnDown);\r\n            } else {\r\n                if (slope > posSlope) {\r\n                    cube.turn(0, frontColumn(cube, this.stickerOnDown), xClip > this.xOnDown);\r\n                } else if (slope < negSlope) {\r\n                    cube.turn(0, frontColumn(cube, this.stickerOnDown), xClip < this.xOnDown);\r\n                } else {\r\n                    cube.turn(1, frontRow(cube, this.stickerOnDown), xClip < this.xOnDown);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Find the sticker with cart2d that contains this coordinate.\r\n     * Return -1 if it's not in any sticker.\r\n     */\r\n    _coordinatesToSticker(x: number, y: number, cube: Cube, buffers: BufferObject[]) {\r\n        const coordinateIsInSticker = i => {\r\n            if (!buffers[i].cart2d) {\r\n                console.error(\"cart2d is undefined\");\r\n                return;\r\n            }\r\n            const cart2d = buffers[i].cart2d;\r\n            // Determine if coordinate is in convex quadrilateral\r\n            const areaQuadrilateral = areaTriangle(cart2d[0], cart2d[1], cart2d[2], cart2d[3], cart2d[4], cart2d[5])\r\n                + areaTriangle(cart2d[0], cart2d[1], cart2d[4], cart2d[5], cart2d[6], cart2d[7]);\r\n            const sumAreaTriangles = areaTriangle(x, y, cart2d[0], cart2d[1], cart2d[2], cart2d[3])\r\n                + areaTriangle(x, y, cart2d[2], cart2d[3], cart2d[4], cart2d[5])\r\n                + areaTriangle(x, y, cart2d[4], cart2d[5], cart2d[6], cart2d[7])\r\n                + areaTriangle(x, y, cart2d[6], cart2d[7], cart2d[0], cart2d[1]);\r\n            const EPSILON = 0.00001;\r\n            if (Math.abs(areaQuadrilateral - sumAreaTriangles) < EPSILON) {\r\n                // This means the coordinate is in the convex quadrilateral!\r\n                return [\r\n                    i,\r\n                    cart2d,\r\n                ];\r\n            }\r\n            return undefined;\r\n        }\r\n\r\n        for (let i = 0; i < 2 * sq(cube.layers); i++) {\r\n            const output = coordinateIsInSticker(i);\r\n            if (output) return output;\r\n        }\r\n\r\n        return [-1, undefined];\r\n    }\r\n}", "/**\r\n * This file contains matrix operations for webgl.\r\n */\r\n\r\n/** Create and return an identity 4x4 matrix */\r\nexport function create() {\r\n    return [\r\n        1, 0, 0, 0,\r\n        0, 1, 0, 0,\r\n        0, 0, 1, 0,\r\n        0, 0, 0, 1,\r\n    ];\r\n}\r\n\r\n/** Copy contents of `a` into `b` */\r\nexport function copy(a, b) {\r\n    b[0] = a[0];\r\n    b[1] = a[1];\r\n    b[2] = a[2];\r\n    b[3] = a[3];\r\n    b[4] = a[4];\r\n    b[5] = a[5];\r\n    b[6] = a[6];\r\n    b[7] = a[7];\r\n    b[8] = a[8];\r\n    b[9] = a[9];\r\n    b[10] = a[10];\r\n    b[11] = a[11];\r\n    b[12] = a[12];\r\n    b[13] = a[13];\r\n    b[14] = a[14];\r\n    b[15] = a[15];\r\n    return b;\r\n}\r\n\r\n/**\r\n * Generates a perspective projection matrix with the given bounds.\r\n * The near/far clip planes correspond to a normalized device coordinate Z range of [-1, 1],\r\n * which matches WebGL/OpenGL's clip volume.\r\n * Passing null/undefined/no value for far will generate infinite projection matrix.\r\n *\r\n * @param out 4x4 frustum matrix that will be written to\r\n * @param fovy Vertical field of view in radians\r\n * @param aspect Aspect ratio. typically viewport width/height\r\n * @param near Near bound of the frustum\r\n * @param far Far bound of the frustum, can be null or Infinity\r\n */\r\nexport function perspective(out, fovy, aspect, near, far) {\r\n    const f = 1.0 / Math.tan(fovy / 2);\r\n    out[0] = f / aspect;\r\n    out[1] = 0;\r\n    out[2] = 0;\r\n    out[3] = 0;\r\n    out[4] = 0;\r\n    out[5] = f;\r\n    out[6] = 0;\r\n    out[7] = 0;\r\n    out[8] = 0;\r\n    out[9] = 0;\r\n    out[11] = -1;\r\n    out[12] = 0;\r\n    out[13] = 0;\r\n    out[15] = 0;\r\n\r\n    if (far != null && far !== Infinity) {\r\n        const nf = 1 / (near - far);\r\n        out[10] = (far + near) * nf;\r\n        out[14] = 2 * far * near * nf;\r\n    } else {\r\n        out[10] = -1;\r\n        out[14] = -2 * near;\r\n    }\r\n    return out;\r\n}\r\n\r\n/**\r\n * Rotate a 4x4 matrix\r\n *\r\n * @param out destination matrix\r\n * @param a matrix to rotate\r\n * @param rad angle to rotate the matrix by\r\n * @param axis axis to rotate around\r\n */\r\nexport function rotate(out, a, rad, axis) {\r\n    let x = axis[0],\r\n        y = axis[1],\r\n        z = axis[2],\r\n        len = 1 / Math.hypot(x, y, z);\r\n\r\n    x *= len;\r\n    y *= len;\r\n    z *= len;\r\n\r\n    let s = Math.sin(rad),\r\n        c = Math.cos(rad),\r\n        t = 1 - c,\r\n        a00 = a[0],\r\n        a01 = a[1],\r\n        a02 = a[2],\r\n        a03 = a[3],\r\n        a10 = a[4],\r\n        a11 = a[5],\r\n        a12 = a[6],\r\n        a13 = a[7],\r\n        a20 = a[8],\r\n        a21 = a[9],\r\n        a22 = a[10],\r\n        a23 = a[11],\r\n        b00 = x * x * t + c,\r\n        b01 = y * x * t + z * s,\r\n        b02 = z * x * t - y * s,\r\n        b10 = x * y * t - z * s,\r\n        b11 = y * y * t + c,\r\n        b12 = z * y * t + x * s,\r\n        b20 = x * z * t + y * s,\r\n        b21 = y * z * t - x * s,\r\n        b22 = z * z * t + c;\r\n\r\n    out[0] = a00 * b00 + a10 * b01 + a20 * b02;\r\n    out[1] = a01 * b00 + a11 * b01 + a21 * b02;\r\n    out[2] = a02 * b00 + a12 * b01 + a22 * b02;\r\n    out[3] = a03 * b00 + a13 * b01 + a23 * b02;\r\n    out[4] = a00 * b10 + a10 * b11 + a20 * b12;\r\n    out[5] = a01 * b10 + a11 * b11 + a21 * b12;\r\n    out[6] = a02 * b10 + a12 * b11 + a22 * b12;\r\n    out[7] = a03 * b10 + a13 * b11 + a23 * b12;\r\n    out[8] = a00 * b20 + a10 * b21 + a20 * b22;\r\n    out[9] = a01 * b20 + a11 * b21 + a21 * b22;\r\n    out[10] = a02 * b20 + a12 * b21 + a22 * b22;\r\n    out[11] = a03 * b20 + a13 * b21 + a23 * b22;\r\n\r\n    // If the source and destination differ, copy the unchanged last row\r\n    if (a !== out) {\r\n        out[12] = a[12];\r\n        out[13] = a[13];\r\n        out[14] = a[14];\r\n        out[15] = a[15];\r\n    }\r\n    return out;\r\n}\r\n\r\n/**\r\n * Translate a mat4 by the given vector\r\n *\r\n * @param m source and destination matrix\r\n * @param v vector to translate by\r\n */\r\nexport function translate(m, v) {\r\n    let x = v[0],\r\n        y = v[1],\r\n        z = v[2];\r\n\r\n    m[12] += m[0] * x + m[4] * y + m[7] * z;\r\n    m[13] += m[1] * x + m[5] * y + m[8] * z;\r\n    m[14] += m[2] * x + m[5] * y + m[9] * z;\r\n    m[15] += m[3] * x + m[6] * y + m[10] * z;\r\n    return m;\r\n}", "/**\r\n * Example:\r\n * \r\n * let single = singleton<number>();  \r\n * function foo() => 1+2+3;  \r\n * single(foo); // returns 6  \r\n * single(foo); // returns 6 without calling foo again\r\n * @returns {T}\r\n */\r\nexport function singleton<T>() {\r\n    let instance: T;\r\n    return (constructor: () => T) => {\r\n        if (!instance) {\r\n            instance = constructor();\r\n        }\r\n        return instance;\r\n    };\r\n}", "import { BufferObject, createBuffers } from \"./buffers\";\r\nimport { Spring } from \"./common/spring\";\r\nimport { Cube, stickers as numStickers } from \"./cube\";\r\nimport { DragDetector } from \"./dragDetector\";\r\nimport * as glMat from \"./glMatrix\";\r\nimport { singleton } from \"./common/singleton\";\r\nimport * as store from \"./store\";\r\n\r\nlet canvas: HTMLCanvasElement = document.querySelector(\"canvas\");\r\nlet gl: WebGLRenderingContext = canvas.getContext(\"webgl\");\r\n\r\ntype ProgramInfo = {\r\n    attribLocations: {\r\n        vertexPosition: number,\r\n        vertexColor: number,\r\n    },\r\n    uniformLocations: {\r\n        transformMatrix: WebGLUniformLocation,\r\n        rotateMatrix: WebGLUniformLocation,\r\n    },\r\n};\r\n\r\nlet programInfo: ProgramInfo = initPrograms();\r\n\r\nexport type Scene = {\r\n    div: HTMLElement,\r\n    cube: Cube,\r\n    spring: Spring,\r\n    buffers: BufferObject[],\r\n    perspectiveMatrix: number[],\r\n    dragEnabled?: boolean,\r\n};\r\nexport let scenes: Scene[] = [];\r\n\r\nexport let settings = {\r\n    animateTurns: true,\r\n    hintStickers: true,\r\n    showBody: true,\r\n}\r\n\r\nexport function loadSavedSettings() {\r\n    settings.animateTurns = store.getAnimateTurns();\r\n    settings.hintStickers = store.getHintStickers();\r\n    settings.showBody = store.getShowBody();\r\n}\r\n\r\nlet time: number = Date.now() * 0.001;\r\n\r\nlet numLayers: number = 3;\r\n\r\nlet loopStarted = false;\r\nexport function startLoop() {\r\n    if (loopStarted) return;\r\n    loopStarted = true;\r\n    requestAnimationFrame(render);\r\n}\r\n\r\nexport function newScene(selector: string): Scene {\r\n    let div = document.querySelector(selector) as HTMLElement;\r\n    let cube = new Cube();\r\n    let spring = new Spring();\r\n    let perspectiveMatrix = initPerspective(div);\r\n    let dragDetector = new DragDetector();\r\n\r\n    cube.setNumOfLayers(numLayers);\r\n\r\n    let buffers = createBuffers(gl, cube, perspectiveMatrix);\r\n\r\n    let scene: Scene = {\r\n        div,\r\n        cube,\r\n        spring,\r\n        buffers,\r\n        perspectiveMatrix,\r\n    };\r\n\r\n    const pointerdown = (offsetX, offsetY) => {\r\n        if (!scene.dragEnabled) return;\r\n        dragDetector.onPointerDown(offsetX, offsetY, scene.div, scene.cube, scene.buffers);\r\n    }\r\n\r\n    const pointermove = (offsetX, offsetY) => {\r\n        if (!scene.dragEnabled) return;\r\n        dragDetector.onPointerMove(offsetX, offsetY);\r\n    }\r\n\r\n    const pointerup = () => {\r\n        if (!scene.dragEnabled) return;\r\n        dragDetector.onPointerUp(scene.div, scene.cube, scene.buffers);\r\n    }\r\n\r\n    const calcOffset = (event) => {\r\n        const rect = event.target.getBoundingClientRect();\r\n        const x = event.touches[0].pageX - rect.left;\r\n        const y = event.touches[0].pageY - rect.top;\r\n        return { x, y };\r\n    }\r\n\r\n    const addPointerListeners = () => {\r\n        div.addEventListener(\"pointerdown\", event => pointerdown(event.offsetX, event.offsetY));\r\n        div.addEventListener(\"pointermove\", event => pointermove(event.offsetX, event.offsetY));\r\n        div.addEventListener(\"pointerup\", event => pointerup());\r\n    }\r\n\r\n    const addTouchListeners = () => {\r\n        div.addEventListener(\"touchstart\", event => {\r\n            const { x, y } = calcOffset(event);\r\n            pointerdown(x, y);\r\n        });\r\n        div.addEventListener(\"touchmove\", event => {\r\n            const { x, y } = calcOffset(event);\r\n            pointermove(x, y);\r\n        });\r\n        div.addEventListener(\"touchend\", event => {\r\n            pointerup();\r\n        });\r\n    }\r\n\r\n    if (window.PointerEvent) {\r\n        addPointerListeners();\r\n    } else {\r\n        addTouchListeners();\r\n    }\r\n\r\n    return scene;\r\n}\r\n\r\nfunction initPrograms() {\r\n    const vertexShaderSource = `\r\n    attribute vec4 aVertexPosition;\r\n    attribute vec4 aVertexColor;\r\n    uniform mat4 uTransformMatrix;\r\n    uniform mat4 uRotateMatrix;\r\n\r\n    // variables shared between vertex and fragment shaders\r\n    varying lowp vec4 vColor;\r\n    varying lowp vec4 originalPos;\r\n    varying lowp vec4 rotatedPos;\r\n    void main(void) {\r\n        gl_Position = uTransformMatrix * aVertexPosition;\r\n        originalPos = aVertexPosition;\r\n        rotatedPos = uRotateMatrix * aVertexPosition;\r\n        vColor = aVertexColor;\r\n    }\r\n    `;\r\n\r\n    const fragmentShaderSource = `\r\n    // variables shared between vertex and fragment shaders\r\n    varying lowp vec4 vColor;\r\n    varying lowp vec4 originalPos;\r\n    varying lowp vec4 rotatedPos;\r\n\r\n    void main(void) {\r\n        gl_FragColor = vColor;\r\n\r\n        // low precision float variable\r\n        lowp float max = 1.05;\r\n\r\n        // if it is a normal sticker rather than a hint sticker, it should not be discarded\r\n        if (originalPos.x < max && originalPos.x > -max && originalPos.y < max && originalPos.y > -max && originalPos.z < max && originalPos.z > -max) {\r\n            return;\r\n        }\r\n\r\n        // if it starts on the right or left, and stays on its side, it should not be discarded\r\n        if (originalPos.x > max && rotatedPos.x > max) return;\r\n        if (originalPos.x < -max && rotatedPos.x < -max) return;\r\n\r\n        if (rotatedPos.y < max && rotatedPos.z < max) return;\r\n        discard;\r\n    }\r\n    `;\r\n\r\n    const shaderProgram = initShaderProgram(gl, vertexShaderSource, fragmentShaderSource);\r\n\r\n    gl.useProgram(shaderProgram);\r\n\r\n    return {\r\n        attribLocations: {\r\n            vertexPosition: gl.getAttribLocation(shaderProgram, 'aVertexPosition'),\r\n            vertexColor: gl.getAttribLocation(shaderProgram, 'aVertexColor'),\r\n        },\r\n        uniformLocations: {\r\n            transformMatrix: gl.getUniformLocation(shaderProgram, 'uTransformMatrix'),\r\n            rotateMatrix: gl.getUniformLocation(shaderProgram, 'uRotateMatrix'),\r\n        }\r\n    }\r\n}\r\n\r\nfunction initPerspective(element: HTMLElement) {\r\n    let perspectiveMatrix = glMat.create();\r\n\r\n    glMat.perspective(perspectiveMatrix,\r\n        50 * Math.PI / 180, // field of view\r\n        element.clientWidth / element.clientHeight, // aspect\r\n        0.1, // z near\r\n        100.0); // z far\r\n\r\n    glMat.translate(perspectiveMatrix,\r\n        [0.0, 0.0, -5.0]);\r\n\r\n    glMat.rotate(perspectiveMatrix,\r\n        perspectiveMatrix,\r\n        45 * Math.PI / 180,\r\n        [1, 0, 0],\r\n    );\r\n\r\n    glMat.rotate(perspectiveMatrix,\r\n        perspectiveMatrix,\r\n        0,\r\n        [0, -1, 0],\r\n    );\r\n\r\n    return perspectiveMatrix;\r\n}\r\n\r\nfunction bindPosition(positionBuffer: WebGLBuffer, programInfo: ProgramInfo, gl: WebGLRenderingContext) {\r\n    gl.bindBuffer(gl.ARRAY_BUFFER, positionBuffer);\r\n    gl.vertexAttribPointer(\r\n        programInfo.attribLocations.vertexPosition,\r\n        3, // size\r\n        gl.FLOAT, // type\r\n        false, // normalize\r\n        0, // stride\r\n        0); // offset\r\n    gl.enableVertexAttribArray(\r\n        programInfo.attribLocations.vertexPosition);\r\n}\r\n\r\nfunction bindColor(colorBuffer: WebGLBuffer, programInfo: ProgramInfo, gl: WebGLRenderingContext) {\r\n    gl.bindBuffer(gl.ARRAY_BUFFER, colorBuffer);\r\n    gl.vertexAttribPointer(\r\n        programInfo.attribLocations.vertexColor,\r\n        4, // size\r\n        gl.FLOAT, // type\r\n        false, // normalize\r\n        0, // stride\r\n        0); // offset\r\n    gl.enableVertexAttribArray(\r\n        programInfo.attribLocations.vertexColor);\r\n}\r\n\r\nfunction drawElements(gl: WebGLRenderingContext) {\r\n    gl.drawElements(\r\n        gl.TRIANGLES,\r\n        6,\r\n        gl.UNSIGNED_SHORT, // type\r\n        0, // offset\r\n    );\r\n}\r\n\r\n// Initialize a shader program, so WebGL knows how to draw our data\r\nfunction initShaderProgram(gl, vsSource, fsSource) {\r\n    const vertexShader = loadShader(gl, gl.VERTEX_SHADER, vsSource);\r\n    const fragmentShader = loadShader(gl, gl.FRAGMENT_SHADER, fsSource);\r\n\r\n    const shaderProgram = gl.createProgram();\r\n    gl.attachShader(shaderProgram, vertexShader);\r\n    gl.attachShader(shaderProgram, fragmentShader);\r\n    gl.linkProgram(shaderProgram);\r\n\r\n    if (!gl.getProgramParameter(shaderProgram, gl.LINK_STATUS)) {\r\n        alert('Unable to initialize the shader program: ' + gl.getProgramInfoLog(shaderProgram));\r\n        return null;\r\n    }\r\n\r\n    return shaderProgram;\r\n}\r\n\r\n// Creates a shader of the given type, uploads the source and compiles it.\r\nfunction loadShader(gl, type, source) {\r\n    const shader = gl.createShader(type);\r\n\r\n    gl.shaderSource(shader, source);\r\n\r\n    gl.compileShader(shader);\r\n\r\n    if (!gl.getShaderParameter(shader, gl.COMPILE_STATUS)) {\r\n        alert('An error occurred compiling the shaders: ' + gl.getShaderInfoLog(shader));\r\n        gl.deleteShader(shader);\r\n        return null;\r\n    }\r\n\r\n    return shader;\r\n}\r\n\r\nfunction resizeCanvasToDisplaySize() {\r\n    // Lookup the size the browser is displaying the canvas in CSS pixels.\r\n    const displayWidth = canvas.clientWidth;\r\n    const displayHeight = canvas.clientHeight;\r\n\r\n    // Check if the canvas is not the same size.\r\n    const needResize = canvas.width !== displayWidth ||\r\n        canvas.height !== displayHeight;\r\n\r\n    if (needResize) {\r\n        // Make the canvas the same size\r\n        canvas.width = displayWidth;\r\n        canvas.height = displayHeight;\r\n    }\r\n\r\n    return needResize;\r\n}\r\n\r\nfunction render(newTime: number) {\r\n    newTime *= 0.001; // convert to seconds\r\n    const dt = newTime - time;\r\n    // const fps = 1 / dt;\r\n    // console.log(fps);\r\n    time = newTime;\r\n\r\n    resizeCanvasToDisplaySize();\r\n\r\n    gl.enable(gl.DEPTH_TEST);\r\n    gl.enable(gl.SCISSOR_TEST);\r\n    gl.depthFunc(gl.LEQUAL); // Near things obscure far things\r\n    gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\r\n\r\n    // move the canvas to top of the current scroll position\r\n    canvas.style.transform = `translateY(${window.scrollY}px)`;\r\n\r\n    for (let i = 0; i < scenes.length; i++) {\r\n        const { cube, div, spring, buffers, perspectiveMatrix } = scenes[i];\r\n\r\n        const rect = div.getBoundingClientRect();\r\n        if (rect.bottom < 0 || rect.top > canvas.clientHeight ||\r\n            rect.right < 0 || rect.left > canvas.clientWidth) {\r\n            continue;  // it's off screen\r\n        }\r\n\r\n        const width = rect.right - rect.left;\r\n        const height = rect.bottom - rect.top;\r\n        const left = rect.left;\r\n        const bottom = canvas.clientHeight - rect.bottom;\r\n\r\n        gl.viewport(left, bottom, width, height);\r\n        gl.scissor(left, bottom, width, height);\r\n\r\n        if (cube.animationQueue[0]) {\r\n            // target is measured in degrees\r\n            spring.target = cube.animationQueue.length * 90;\r\n            spring.update(dt);\r\n\r\n            if (spring.position >= 90) {\r\n                cube.affectedStickers = Array(numStickers(cube.layers)).fill(false);\r\n\r\n                spring.position = 0;\r\n                cube.animationQueue.shift();\r\n            }\r\n        }\r\n\r\n        const animation = cube.animationQueue[0];\r\n        let stickers = chooseStickers(cube);\r\n\r\n        let _transformSingleton = singleton<number[]>();\r\n        let _rotateSingleton = singleton<number[]>();\r\n\r\n\r\n        for (let i = 0; i < numStickers(cube.layers); i++) {\r\n            let object = buffers[i];\r\n\r\n            // Rotate if the sticker is affected by the animation and if the user wants to animate\r\n            const transform = (animation && animation.stickersToAnimate[i] && settings.animateTurns)\r\n                ? _transformSingleton(() => {\r\n                    return glMat.rotate(\r\n                        glMat.create(),\r\n                        perspectiveMatrix,\r\n                        spring.position * Math.PI / 180,\r\n                        animation.axis\r\n                    );\r\n                })\r\n                : perspectiveMatrix;\r\n\r\n            gl.uniformMatrix4fv(\r\n                programInfo.uniformLocations.transformMatrix,\r\n                false,\r\n                transform,\r\n            );\r\n\r\n            const rotation = (animation && animation.stickersToAnimate[i] && settings.animateTurns)\r\n                ? _rotateSingleton(() => {\r\n                    const rotateMat = glMat.create();\r\n                    return glMat.rotate(\r\n                        rotateMat,\r\n                        rotateMat,\r\n                        spring.position * Math.PI / 180,\r\n                        animation.axis,\r\n                    );\r\n                })\r\n                : glMat.create();\r\n\r\n            gl.uniformMatrix4fv(\r\n                programInfo.uniformLocations.rotateMatrix,\r\n                false,\r\n                rotation,\r\n            );\r\n\r\n            gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, object.indexBuffer);\r\n\r\n            if (settings.showBody) {\r\n                bindPosition(object.noGapPositionBuffer, programInfo, gl);\r\n                bindColor(cube.underStickers[i].buffer, programInfo, gl);\r\n                drawElements(gl);\r\n            }\r\n\r\n            bindPosition(object.positionBuffer, programInfo, gl);\r\n            bindColor(stickers[i].buffer, programInfo, gl);\r\n            drawElements(gl);\r\n\r\n            if (settings.hintStickers) {\r\n                bindPosition(object.hintPositionBuffer, programInfo, gl);\r\n                bindColor(stickers[i].buffer, programInfo, gl);\r\n                drawElements(gl);\r\n            }\r\n        }\r\n    }\r\n\r\n    requestAnimationFrame(render);\r\n}\r\n\r\nfunction chooseStickers(cube: Cube) {\r\n    // If user doesn't want animations, go straight to the current stickers\r\n    if (!settings.animateTurns) {\r\n        return cube.stickers;\r\n    }\r\n\r\n    // If there is an animation queued, animate the one at the front of the queue\r\n    if (cube.animationQueue[0]) {\r\n        return cube.animationQueue[0].stickers;\r\n    }\r\n\r\n    return cube.stickers;\r\n}", "import { createElement } from \"./common/element\";\r\n\r\n/**\r\n * 725 was chosen because 425 is the width of the main content and 300 is the width of the right panel.\r\n * 425 + 300 = 725\r\n */\r\nexport const NARROW = 725;\r\n\r\nlet opened = false;\r\n\r\nexport function open(ele: HTMLElement) {\r\n    opened = true;\r\n    ele.style.display = \"flex\";\r\n    ele.classList.add(\"slideLeftOpen\");\r\n    if (document.documentElement.clientWidth < NARROW) {\r\n        ele.classList.add(\"slideLeftClosed\");\r\n    } else {\r\n        ele.classList.remove(\"slideLeftClosed\");\r\n    }\r\n}\r\n\r\nexport function close(ele: HTMLElement) {\r\n    opened = false;\r\n    if (document.documentElement.clientWidth < NARROW) {\r\n        ele.classList.add(\"slideLeftClosed\");\r\n        ele.classList.remove(\"slideLeftOpen\");\r\n        ele.style.display = \"flex\";\r\n    } else {\r\n        ele.style.display = \"none\";\r\n    }\r\n}\r\n\r\nexport function toggle(ele: HTMLElement) {\r\n    if (opened) {\r\n        close(ele);\r\n    } else {\r\n        open(ele);\r\n    }\r\n}\r\n\r\n/** TODO: Deprecate in favor of renderHeader1 */\r\nexport function renderHeader(title: string) {\r\n    return `\r\n    <div class=\"row\" style=\"justify-content: space-between; width: 100%; padding-bottom: 16px;\">\r\n        <p style=\"font-weight: bold; padding-right: 2rem;\">${title}</p>\r\n        <svg id=\"closeDrawer\" class=\"xButton\" width=\"32\" height=\"32\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\" stroke=\"black\">\r\n            <path id=\"closeDrawer\" d=\"M 2 2 L 22 22 M 22 2 L 2 22\" stroke-width=\"2\" />\r\n        </svg>\r\n    </div>\r\n    `;\r\n}\r\n\r\nexport function renderHeader1(title: string) {\r\n    return createElement(\"div\", {\r\n        className: \"row\",\r\n        style: \"justify-content: space-between; width: 100%; padding-bottom: 16px;\",\r\n        children: [\r\n            createElement(\"p\", {\r\n                style: \"font-weight: bold; padding-right: 2rem;\",\r\n                innerHTML: title,\r\n            }),\r\n            createElement(\"div\", {\r\n                innerHTML: `<svg id=\"closeDrawer\" class=\"xButton\" width=\"32\" height=\"32\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\" stroke=\"black\">\r\n                    <path id=\"closeDrawer\" d=\"M 2 2 L 22 22 M 22 2 L 2 22\" stroke-width=\"2\" />\r\n                </svg>`,\r\n            }),\r\n        ],\r\n    });\r\n}", "export function addListenersForLeftModal() {\r\n    const drawer = document.querySelector(\".slideRight\");\r\n    let isOpen = false;\r\n\r\n    function updateDrawer(open: boolean) {\r\n        isOpen = open;\r\n        if (isOpen) {\r\n            drawer.classList.add(\"slideRightOpen\");\r\n            return;\r\n        }\r\n        drawer.classList.remove(\"slideRightOpen\");\r\n    }\r\n\r\n    document.addEventListener(\"click\", event => {\r\n        const ele = event.target as HTMLElement;\r\n\r\n        if (ele === document.querySelector(\"#menu\")) {\r\n            updateDrawer(true);\r\n            return;\r\n        }\r\n\r\n        // Close if click outside of the drawer.\r\n        if (isOpen && !ele.closest(\".slideRight\")) {\r\n            updateDrawer(false);\r\n        }\r\n    });\r\n\r\n    document.querySelector(\"#closeMenu\").addEventListener(\"click\", () => {\r\n        updateDrawer(false);\r\n    });\r\n\r\n    document.querySelector(\"#learnButton\").addEventListener(\"click\", () => {\r\n        document.location.href = \"learn.html\";\r\n    });\r\n    document.querySelector(\"#playButton\").addEventListener(\"click\", () => {\r\n        document.location.href = \"play.html\";\r\n    });\r\n    document.querySelector(\"#trainButton\").addEventListener(\"click\", () => {\r\n        document.location.href = \"train.html\";\r\n    });\r\n    document.querySelector(\"#cubleButton\").addEventListener(\"click\", () => {\r\n        document.location.href = \"cuble.html\";\r\n    });\r\n}", "import { createBuffers } from \"./buffers\";\r\nimport * as _colors from \"./colors\";\r\nimport { randInt } from \"./common/rand\";\r\nimport { stickerToFace } from \"./common/util\";\r\nimport { Cube } from \"./cube\";\r\nimport { newScene, scenes, startLoop } from \"./scene\";\r\nimport * as slide from \"./slide\";\r\nimport { addListenersForLeftModal } from \"./ui\";\r\n\r\nlet canvas: HTMLCanvasElement = document.querySelector(\"canvas\");\r\nlet gl: WebGLRenderingContext = canvas.getContext(\"webgl\");\r\n\r\nexport type Lesson = {\r\n    activeStickers: number[],\r\n    cube?: Cube,\r\n    move?: number,\r\n\r\n    // The following are used for the explanatory lessons\r\n    setup?: string,\r\n    algorithm?: string,\r\n\r\n    // The following is used for practice problems\r\n    practiceProblems?: PracticeProblem[],\r\n    problemIndex?: number,\r\n    showSolution?: boolean,\r\n}\r\n\r\nexport type PracticeProblem = {\r\n    setup: string,\r\n    algorithm: string,\r\n    directions: string,\r\n    explanation: string,\r\n}\r\n\r\nexport function initLearnPage(lessons: Lesson[], layers: number) {\r\n    addListenersForLeftModal();\r\n    \r\n    addLessonNavigatorListener(lessons, layers);\r\n    addShowSolutionListeners(lessons);\r\n\r\n    for (let i = 0; i < lessons.length; i++) {\r\n        renderLesson(lessons, layers, i);\r\n    }\r\n\r\n    render(lessons);\r\n    startLoop();\r\n\r\n    addResizeListener();\r\n    renderBasedOnWidth();\r\n}\r\n\r\nfunction renderLesson(lessons: Lesson[], layers: number, i: number) {\r\n    const scene = newScene(`#scene${i}`);\r\n    scenes.push(scene);\r\n\r\n    scene.cube.setNumOfLayers(layers);\r\n    scene.buffers = createBuffers(gl, scenes[0].cube, scenes[0].perspectiveMatrix);\r\n\r\n    const lesson = lessons[i];\r\n    lesson.cube = scene.cube;\r\n    lesson.move = 0;\r\n\r\n    // if there are no practice problems, then we are in the explain mode\r\n    if (lesson.practiceProblems) {\r\n        scene.dragEnabled = true;\r\n        randomProblem(lesson);\r\n    } else {\r\n        const colors = determineColors(lesson);\r\n        scene.cube.setColors(colors);\r\n\r\n        scene.cube.execAlg(lesson.setup);\r\n    }\r\n}\r\n\r\nfunction render(lessons: Lesson[]) {\r\n    for (let i = 0; i < lessons.length; i++) {\r\n        const lesson = lessons[i];\r\n        if (lesson.practiceProblems && lesson.showSolution) {\r\n            const problem = lesson.practiceProblems[lesson.problemIndex];\r\n            document.querySelector(`#problemText${i}`).textContent = problem.explanation;\r\n\r\n            (document.querySelector(`#leftButton${i}`) as HTMLElement).style.display = \"\";\r\n            (document.querySelector(`#rightButton${i}`) as HTMLElement).style.display = \"\";\r\n            const moveCounter: HTMLElement = document.querySelector(`#moveCounter${i}`);\r\n            moveCounter.style.display = \"\";\r\n            const parsedAlg = parseMovesFromAlg(lesson.algorithm);\r\n            moveCounter.textContent = `${lesson.move} / ${parsedAlg.length}`;\r\n            continue;\r\n        }\r\n        if (lesson.practiceProblems && !lesson.showSolution) {\r\n            const problem = lesson.practiceProblems[lesson.problemIndex];\r\n            document.querySelector(`#problemText${i}`).textContent = problem.directions;\r\n\r\n            (document.querySelector(`#leftButton${i}`) as HTMLElement).style.display = \"none\";\r\n            (document.querySelector(`#rightButton${i}`) as HTMLElement).style.display = \"none\";\r\n            (document.querySelector(`#moveCounter${i}`) as HTMLElement).style.display = \"none\";\r\n            continue;\r\n        }\r\n\r\n        // no practice problems, so we are in the explain mode\r\n        const moveCounter = document.querySelector(`#moveCounter${i}`);\r\n        const parsedAlg = parseMovesFromAlg(lesson.algorithm);\r\n        moveCounter.textContent = `${lesson.move} / ${parsedAlg.length}`;\r\n    }\r\n}\r\n\r\nfunction randomProblem(lesson: Lesson) {\r\n    let problemIndex = randInt(lesson.practiceProblems.length);\r\n    // Make sure we don't get the same problem twice in a row\r\n    while (problemIndex === lesson.problemIndex) {\r\n        problemIndex = randInt(lesson.practiceProblems.length);\r\n    }\r\n    setupProblem(lesson, problemIndex);\r\n}\r\n\r\nfunction setupProblem(lesson: Lesson, problemIndex: number) {\r\n    const problem = lesson.practiceProblems[problemIndex];\r\n    lesson.problemIndex = problemIndex;\r\n    lesson.algorithm = lesson.practiceProblems[problemIndex].algorithm;\r\n\r\n    const colors = determineColors(lesson);\r\n    lesson.cube.setColors(colors);\r\n\r\n    lesson.cube.execAlg(problem.setup);\r\n    lesson.move = 0;\r\n}\r\n\r\n// TODO consider using the refactored function in common/determine_colors.ts\r\nfunction determineColors(lesson: Lesson): number[][] {\r\n    const colors = Array(54); // hardcoded because we are using a 3x3x3 cube\r\n\r\n    lesson.activeStickers.forEach(i => {\r\n        colors[i] = _colors.faceToColor(stickerToFace(i, lesson.cube));\r\n    });\r\n\r\n    // Fill in the rest with gray\r\n    for (let i = 0; i < 54; i++) {\r\n        if (colors[i]) continue;\r\n        colors[i] = _colors.GRAY;\r\n    }\r\n\r\n    return colors;\r\n}\r\n\r\nfunction addLessonNavigatorListener(lessons: Lesson[], layers: number) {\r\n    const lessonNavigator: HTMLElement = document.querySelector(\"#lessonNavigator\");\r\n\r\n    lessonNavigator.addEventListener(\"click\", (event) => {\r\n        const target = event.target as HTMLElement;\r\n        if (target.className === \"lesson-p\") {\r\n            const lessonIndex = parseInt(target.getAttribute(\"lesson-index\"));\r\n            renderLesson(lessons, layers, lessonIndex);\r\n            if (document.documentElement.clientWidth < slide.NARROW) {\r\n                slide.close(lessonNavigator);\r\n            }\r\n        }\r\n    });\r\n\r\n    document.querySelector(\"#openClose\").addEventListener(\"click\", (event) => {\r\n        slide.toggle(lessonNavigator);\r\n    });\r\n\r\n    document.querySelector(\"#close\").addEventListener(\"click\", (event) => {\r\n        slide.toggle(lessonNavigator);\r\n    });\r\n}\r\n\r\nfunction addShowSolutionListeners(lessons: Lesson[]) {\r\n    const leftButton = \"leftButton\";\r\n    const rightButton = \"rightButton\";\r\n    const showSolution = \"showSolution\";\r\n    const next = \"next\";\r\n    document.addEventListener(\"click\", (event) => {\r\n        const target = event.target as HTMLElement;\r\n        if (target.id.startsWith(leftButton)) {\r\n            const lessonIndex = parseInt(target.id.substring(leftButton.length));\r\n            const lesson = lessons[lessonIndex];\r\n\r\n            if (lesson.move <= 0) return;\r\n\r\n            lesson.move--;\r\n            const moves = parseMovesFromAlg(lesson.algorithm);\r\n            lesson.cube.stepAlgorithm(moves[lesson.move], false);\r\n\r\n            render(lessons);\r\n        } else if (target.id.startsWith(rightButton)) {\r\n            const lessonIndex = parseInt(target.id.substring(rightButton.length));\r\n            const lesson = lessons[lessonIndex];\r\n\r\n            const moves = parseMovesFromAlg(lesson.algorithm);\r\n            if (lesson.move >= moves.length) return;\r\n\r\n            lesson.cube.stepAlgorithm(moves[lesson.move], true);\r\n\r\n            lesson.move++;\r\n            render(lessons);\r\n        } else if (target.id.startsWith(showSolution)) {\r\n            const lessonIndex = parseInt(target.id.substring(showSolution.length));\r\n            const lesson = lessons[lessonIndex];\r\n            lesson.showSolution = true;\r\n            scenes[lessonIndex].dragEnabled = false;\r\n            setupProblem(lesson, lesson.problemIndex);\r\n            render(lessons);\r\n        } else if (target.id.startsWith(next)) {\r\n            const lessonIndex = parseInt(target.id.substring(next.length));\r\n            const lesson = lessons[lessonIndex];\r\n            lesson.showSolution = false;\r\n            scenes[lessonIndex].dragEnabled = true;\r\n            randomProblem(lesson);\r\n            render(lessons);\r\n        }\r\n    });\r\n}\r\n\r\nexport function addResizeListener() {\r\n    window.addEventListener(\"resize\", () => {\r\n        renderBasedOnWidth();\r\n    });\r\n}\r\n\r\nexport function renderBasedOnWidth() {\r\n    const openClose = document.querySelector(\"#openClose\") as HTMLElement;\r\n    const close = document.querySelector(\"#close\") as HTMLElement;\r\n    const drawerEle = document.querySelector(\"#lessonNavigator\") as HTMLElement;\r\n\r\n    if (document.documentElement.clientWidth < slide.NARROW) {\r\n        openClose.style.display = \"inline-block\";\r\n        close.style.display = \"inline-block\";\r\n        slide.close(drawerEle);\r\n        return;\r\n    }\r\n    openClose.style.display = \"none\";\r\n    close.style.display = \"none\";\r\n    slide.open(drawerEle);\r\n}\r\n\r\nfunction parseMovesFromAlg(alg?: string): string[] {\r\n    return (alg || \"\").split(\" \");\r\n}", "import * as pieceIndices from \"./pieceIndices\";\r\nimport { initLearnPage, Lesson } from \"./learnBase\";\r\n\r\nlet lessons: Lesson[] = [\r\n    {\r\n        activeStickers: pieceIndices.CENTERS,\r\n        setup: \"\",\r\n        algorithm: \"x x x x y y y y\",\r\n    },\r\n    {\r\n        activeStickers: [...pieceIndices.layer1Corners, ...pieceIndices.layer2Corners],\r\n        setup: \"\",\r\n        algorithm: \"x x x x y y y y\",\r\n    },\r\n    {\r\n        activeStickers: [...pieceIndices.layer1Edges, ...pieceIndices.layer2Edges, ...pieceIndices.layer3Edges],\r\n        setup: \"\",\r\n        algorithm: \"x x x x y y y y\",\r\n    },\r\n    {\r\n        activeStickers: pieceIndices.cross,\r\n        setup: \"\",\r\n        algorithm: \"y y y y\",\r\n    },\r\n    {\r\n        activeStickers: pieceIndices.cross,\r\n        practiceProblems: [\r\n            {\r\n                setup: \"F F D\",\r\n                algorithm: \"D' F F\",\r\n                directions: \"Solve the white-green edge\",\r\n                explanation: \"To solve the white-green, line up the green, then line up the white.\",\r\n            },\r\n            {\r\n                setup: \"y U2 R' U2\",\r\n                algorithm: \"U U R U U\",\r\n                directions: \"Solve the white-green edge\",\r\n                explanation: \"To insert the white green, move the top layer, move the white-green up, then fix the top layer.\",\r\n            },\r\n            {\r\n                setup: \"F' R' F\",\r\n                algorithm: \"y D F' U' R U\",\r\n                directions: \"Solve the white-red edge\",\r\n                explanation: \"First we'll rotate the cube so red is in the front. Then we'll bring the white-red around to insert it.\",\r\n            },\r\n            {\r\n                setup: \"y' U R U' B'\",\r\n                algorithm: \"y y F' U' R U\",\r\n                directions: \"Solve the white-red edge\",\r\n                explanation: \"The white-red is in the back, so first we'll rotate the cube. Then, move the white-red to the side and insert it.\",\r\n            },\r\n            {\r\n                setup: \"y U F' U'\",\r\n                algorithm: \"y' U R U'\",\r\n                directions: \"Solve the white-blue edge\",\r\n                explanation: \"The white-blue is on the left, so first we'll rotate the cube. Then, insert it.\",\r\n            },\r\n            {\r\n                setup: \"y' L2 D2\",\r\n                algorithm: \"D' D' L' L'\",\r\n                directions: \"Solve the white-blue edge\",\r\n                explanation: \"The white-blue is on the bottom right. To solve it, line up the blue, then line up the white.\",\r\n            },\r\n            {\r\n                setup: \"y2 R' U' R U\",\r\n                algorithm: \"F F D R R\",\r\n                directions: \"Solve the white-orange edge\",\r\n                explanation: \"The white-orange is in another edge's position, so first, we'll take it out. Then line up the orange, then line up the white.\",\r\n            },\r\n            {\r\n                setup: \"L\",\r\n                algorithm: \"L'\",\r\n                directions: \"Solve the white-orange edge\",\r\n                explanation: \"This is one of the easiest cases. The white-orange is only one move away.\",\r\n            }\r\n        ],\r\n    },\r\n    {\r\n        activeStickers: pieceIndices.firstLayer,\r\n        setup: \"\",\r\n        algorithm: \"y y y y\",\r\n    },\r\n    {\r\n        activeStickers: pieceIndices.firstLayer,\r\n        practiceProblems: [\r\n            {\r\n                setup: \"z2 R U' R'\",\r\n                algorithm: \"R U R'\",\r\n                directions: \"Solve the white-green-orange corner\",\r\n                explanation: \"Move corner up, move corner to the side, move back down\",\r\n            },\r\n            {\r\n                setup: \"z2 y R U' R' U R U' R' U\",\r\n                algorithm: \"R U R' U' R U R'\",\r\n                directions: \"Solve the white-orange-blue corner\",\r\n                explanation: \"Move corner up, move corner to the side, move back down. Repeat 1x\",\r\n            },\r\n            {\r\n                setup: \"z2 y2 R U' R' U R U' R' U R U' R'\",\r\n                algorithm: \"R U R' U' R U R' U' R U R'\",\r\n                directions: \"Solve the white-blue-red corner\",\r\n                explanation: \"Move corner up, move corner to the side, move back down. Repeat 3x\",\r\n            },\r\n            {\r\n                setup: \"z2 y' R U' R' U R U' R' U R U' R' U R U' R'\",\r\n                algorithm: \"R U R' U' R U R' U' R U R' U' R U R'\",\r\n                directions: \"Solve the white-red-green corner\",\r\n                explanation: \"Move corner up, move corner to the side, move back down. Repeat 4x\",\r\n            },\r\n            {\r\n                setup: \"z2 R U' R' U R U' R' U R U' R' U R U' R' U R U' R'\",\r\n                algorithm: \"R U R' U' R U R' U' R U R' U' R U R' U' R U R'\",\r\n                directions: \"Solve the white-green-orange corner\",\r\n                explanation: \"Move corner up, move corner to the side, move back down. Repeat 5x\",\r\n            },\r\n        ],\r\n    },\r\n    {\r\n        activeStickers: pieceIndices.f2l,\r\n        setup: \"z2\",\r\n        algorithm: \"y y y y\",\r\n    },\r\n    {\r\n        activeStickers: pieceIndices.f2l,\r\n        practiceProblems: [\r\n            {\r\n                setup: \"z2 F' U' F U R U R' U'\",\r\n                algorithm: \"U R U' R' U' F' U F\",\r\n                directions: \"Solve the green-orange edge\",\r\n                explanation: \"Pair up the green-orange edge with the white-green-orange corner. Then insert the pair into the slot.\",\r\n            },\r\n            {\r\n                setup: \"z2 y F' U' F U R U R' U\",\r\n                algorithm: \"U' R U' R' U' F' U F\",\r\n                directions: \"Solve the orange-blue edge\",\r\n                explanation: \"Pair up the orange-blue edge with the white-orange-blue corner. Then insert the pair into the slot.\",\r\n            },\r\n            {\r\n                setup: \"z2 y2 F' U' F U R U R' U2\",\r\n                algorithm: \"U U R U' R' U' F' U F\",\r\n                directions: \"Solve the blue-red edge\",\r\n                explanation: \"Pair up the blue-red edge with the white-blue-red corner. Then insert the pair into the slot.\",\r\n            },\r\n            {\r\n                setup: \"z2 y' F' U' F U R U R'\",\r\n                algorithm: \"R U' R' U' F' U F\",\r\n                directions: \"Solve the red-green edge\",\r\n                explanation: \"Pair up the red-green edge with the white-red-green corner. Then insert the pair into the slot.\",\r\n            },\r\n        ],\r\n    },\r\n    {\r\n        activeStickers: [...pieceIndices.f2l, ...pieceIndices.eoll],\r\n        setup: \"z2\",\r\n        algorithm: \"y y y y\",\r\n    },\r\n    {\r\n        activeStickers: [...pieceIndices.f2l, ...pieceIndices.eoll],\r\n        practiceProblems: [\r\n            {\r\n                setup: \"z2 F U R U' R' F'\",\r\n                algorithm: \"F R U R' U' F'\",\r\n                directions: \"Solve the yellow cross\",\r\n                explanation: \"When you have a horizontal bar, move the front layer, do some in-between moves, then fix the front layer.\",\r\n            },\r\n            {\r\n                setup: \"z2 y F U R U' R' F' U\",\r\n                algorithm: \"U F R U R' U' F'\",\r\n                directions: \"Solve the yellow cross\",\r\n                explanation: \"Make the bar horizontal. Then move the front layer, do some in-between moves, then fix the front layer.\",\r\n            },\r\n            {\r\n                setup: \"z2 y F R U R' U' F' U'\",\r\n                algorithm: \"U F U R U' R' F'\",\r\n                directions: \"Solve the yellow cross\",\r\n                explanation: \"Move the L-shape to the top left. Then move the front layer, do some in-between moves, then fix the front layer.\",\r\n            },\r\n            {\r\n                setup: \"z2 y' F R U R' U' F' U2\",\r\n                algorithm: \"U U F U R U' R' F'\",\r\n                directions: \"Solve the yellow cross\",\r\n                explanation: \"Move the L-shape to the top left. Then move the front layer, do some in-between moves, then fix the front layer.\",\r\n            },\r\n            {\r\n                setup: \"z2 F U R U' R' F' U F R U R' U' F'\",\r\n                algorithm: \"F U R U' R' F' U F R U R' U' F'\",\r\n                directions: \"Solve the yellow cross\",\r\n                explanation: \"When you have the dot case, you combine the algorithms for the L-shape and horizontal bar cases.\",\r\n            },\r\n            {\r\n                setup: \"z2 y2 F U R U' R' F' U F R U R' U' F'\",\r\n                algorithm: \"F U R U' R' F' U F R U R' U' F'\",\r\n                directions: \"Solve the yellow cross\",\r\n                explanation: \"When you have the dot case, you combine the algorithms for the L-shape and horizontal bar cases.\",\r\n            },\r\n        ],\r\n    },\r\n    {\r\n        activeStickers: [...pieceIndices.f2l, ...pieceIndices.oll],\r\n        setup: \"z2 R U2 R' U' R U' R'\",\r\n        algorithm: \"R U R' U R U U R'\",\r\n    },\r\n    {\r\n        activeStickers: [...pieceIndices.f2l, ...pieceIndices.oll],\r\n        practiceProblems: [\r\n            {\r\n                setup: \"z2 R U2 R' U' R U' R'\",\r\n                algorithm: \"R U R' U R U U R'\",\r\n                directions: \"Solve the yellow corners\",\r\n                explanation: \"If you have 1 yellow on top, bring the yellow to the front left, then do the Sune.\",\r\n            },\r\n            {\r\n                setup: \"z2 y R U R' U R U2 R' U'\",\r\n                algorithm: \"U' R U R' U R U U R' U U R U R' U R U U R'\",\r\n                directions: \"Solve the yellow corners\",\r\n                explanation: \"If you have 1 yellow on top, bring the yellow to the front left, then do the Sune. In this case, you have to do the Sune twice.\",\r\n            },\r\n            {\r\n                setup: \"z2 y2 R U2 R' U' R U R' U' R U' R'\",\r\n                algorithm: \"R U R' U R U U R' R U R' U R U U R'\",\r\n                directions: \"Solve the yellow corners\",\r\n                explanation: \"In this case, there are no yellows on top, and it kind of looks like an H. Do the Sune twice.\",\r\n            },\r\n            {\r\n                setup: \"z2 y' L F R' F' L' F R F' U2\",\r\n                algorithm: \"R U R' U R U U R' R U R' U R U U R' R U R' U R U U R'\",\r\n                directions: \"Solve the yellow corners\",\r\n                explanation: \"In this case, there are 2 yellows diagonal from each other. Do the Sune 3x.\",\r\n            },\r\n            {\r\n                setup: \"z2 F R' F' L F R F' L'\",\r\n                algorithm: \"R U R' U R U U R' U R U R' U R U U R' U U R U R' U R U U R'\",\r\n                directions: \"Solve the yellow corners\",\r\n                explanation: \"In this case, there are two yellows on top and the other yellows are facing opposite directions. This requires doing Sune 3x.\",\r\n            },\r\n            {\r\n                setup: \"z2 y R U2 R D R' U2 R D' R2\",\r\n                algorithm: \"R U R' U R U U R' U' R U R' U R U U R' U U R U R' U R U U R'\",\r\n                directions: \"Solve the yellow corners\",\r\n                explanation: \"In this case, there are two yellows on top and the other yellows are facing the same direction. This requires doing Sune 3x.\",\r\n            },\r\n            {\r\n                setup: \"z2 y2 R U2 R2 U' R2 U' R2 U2 R\",\r\n                algorithm: \"R U R' U R U U R' U' R U R' U R U U R'\",\r\n                directions: \"Solve the yellow corners\",\r\n                explanation: \"In this case, there are no yellows on top. This requires doing Sune 2x.\",\r\n            },\r\n        ],\r\n    },\r\n    {\r\n        activeStickers: [...pieceIndices.f2l, ...pieceIndices.oll, ...pieceIndices.cpll],\r\n        setup: \"z2 R2 B2 R F R' B2 R F' R\",\r\n        algorithm: \"R' F R' B' B' R F' R' B' B' R R\",\r\n    },\r\n    {\r\n        activeStickers: [...pieceIndices.f2l, ...pieceIndices.oll, ...pieceIndices.cpll],\r\n        practiceProblems: [\r\n            {\r\n                setup: \"z2 U2 R2 B2 R F R' B2 R F' R U\",\r\n                algorithm: \"U' R' F R' B' B' R F' R' B' B' R R U U\",\r\n                directions: \"Solve the corners\",\r\n                explanation: \"Move the matching corners to the back, use the last layer corners algorithm, then adjust the top layer.\",\r\n            },\r\n            {\r\n                setup: \"z2 y U' R2 B2 R F R' B2 R F' R U2\",\r\n                algorithm: \"U U R' F R' B' B' R F' R' B' B' R R U\",\r\n                directions: \"Solve the corners\",\r\n                explanation: \"Move the matching corners to the back, use the last layer corners algorithm, then adjust the top layer.\",\r\n            },\r\n            {\r\n                setup: \"z2 y2 F R U' R' U' R U R' F' R U R' U' R' F R F'\",\r\n                algorithm: \"R' F R' B' B' R F' R' B' B' R R U R' F R' B' B' R F' R' B' B' R R U U\",\r\n                directions: \"Solve the corners\",\r\n                explanation: \"In this case, there are no matching corners on any side. Use the last layer corners algorithm twice.\",\r\n            },\r\n            {\r\n                setup: \"z2 y' F R U' R' U' R U R' F' R U R' U' R' F R F' U'\",\r\n                algorithm: \"R' F R' B' B' R F' R' B' B' R R U R' F R' B' B' R F' R' B' B' R R U\",\r\n                directions: \"Solve the corners\",\r\n                explanation: \"In this case, there are no matching corners on any side. Use the last layer corners algorithm twice.\",\r\n            },\r\n        ],\r\n    },\r\n    {\r\n        activeStickers: pieceIndices.allPieces,\r\n        setup: \"z2 M' M' U' M U U M' U' M' M'\",\r\n        algorithm: \"M' M' U M U U M' U M' M'\",\r\n    },\r\n    {\r\n        activeStickers: pieceIndices.allPieces,\r\n        practiceProblems: [\r\n            {\r\n                setup: \"z2 U2 M' M' U' M U U M' U' M' M' U\",\r\n                algorithm: \"U' M' M' U M U U M' U M' M' U U\",\r\n                directions: \"Solve the cube\",\r\n                explanation: \"Move the matching colors to back, use the last layer edges algorithm, then adjust the top layer.\",\r\n            },\r\n            {\r\n                setup: \"z2 y U' M' M' U M U U M' U M' M' U2\",\r\n                algorithm: \"U U M' M' U M U U M' U M' M' M' M' U M U U M' U M' M' U\",\r\n                directions: \"Solve the cube\",\r\n                explanation: \"You have to use the algorithm twice for this case.\",\r\n            },\r\n            {\r\n                setup: \"z2 y2 M2 U' M2 U2 M2 U' M2 U'\",\r\n                algorithm: \"M' M' U M U U M' U M' M' U M' M' U M U U M' U M' M'\",\r\n                directions: \"Solve the cube\",\r\n                explanation: \"You have to use the algorithm twice for this case.\",\r\n            },\r\n            {\r\n                setup: \"z2 y' M2 U' M2 U' M' U2 M2 U2 M' U\",\r\n                algorithm: \"M' M' U M U U M' U M' M' U' M' M' U M U U M' U M' M' U U\",\r\n                directions: \"Solve the cube\",\r\n                explanation: \"You have to use the algorithm twice for this case.\",\r\n            },\r\n        ],\r\n    },\r\n];\r\n\r\nfunction main() {\r\n    initLearnPage(lessons, 3);\r\n}\r\n\r\nmain();"],
  "mappings": "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",
  "names": ["CENTERS", "UBL", "URB", "ULF", "UFR", "DFL", "DRF", "DLB", "DBR", "UB", "UL", "UR", "UF", "FL", "FR", "DF", "DL", "DR", "DB", "BL", "BR", "layer1Corners", "layer2Corners", "layer1Edges", "layer2Edges", "layer3Edges", "cross", "firstLayer", "f2l", "eoll", "oll", "cpll", "lastLayer", "allPieces", "WHITE", "GRAY", "YELLOW", "GREEN", "BLUE", "ORANGE", "RED", "BLACK", "colors", "faceToColor", "face", "stickerToFace", "sticker", "cube", "sq", "randInt", "int", "shuffle", "array", "i", "r", "randInt", "temp", "U", "F", "D", "B", "L", "R", "corners", "edges", "scramble3x3", "cube", "eo", "orientation", "co", "cp", "permutation", "ep", "permutationParity", "stickers", "i", "center", "uCorners", "fCorners", "dCorners", "bCorners", "lCorners", "rCorners", "fill4C", "cIndices", "c1", "c2", "c3", "c4", "co1", "co2", "co3", "co4", "corner", "ci", "o", "uEdges", "fEdges", "dEdges", "bEdges", "lEdges", "rEdges", "fill4E", "eIndices", "e1", "e2", "e3", "e4", "eo1", "eo2", "eo3", "eo4", "edge", "ei", "pieces", "orientations", "randInt", "orientationValid", "randPiece", "sum", "p", "shuffle", "cpy", "parity", "misplaced", "value", "index", "temp", "canvas", "gl", "setColor", "sticker", "color", "arr", "sq", "x", "half", "even", "stickers", "layers", "Cube", "colors", "i", "face", "stickerToFace", "faceToColor", "state", "scramble3x3", "numTurns", "axis", "layer", "clockwise", "num", "BLACK", "prevStickers", "rotationAxis", "center", "topLeft", "topRight", "bottomLeft", "bottomRight", "numEdges", "j", "top", "left", "bottom", "right", "i1", "i2", "i3", "i4", "temp", "event", "move", "forward", "alg", "moves", "offset", "corner", "edge", "corners", "createBuffers", "gl", "cube", "perspectiveMatrix", "allPositions", "makePositions", "allNoGapPositions", "allHintPositions", "objects", "stickers", "i", "object", "positions", "noGapPos", "hintPos", "j", "index", "homo", "multiply", "indices", "arr", "offset", "a", "b", "out", "b0", "b1", "b2", "b3", "perSticker", "verticesInSquare", "dimensions", "radius", "gap", "perFace", "sq", "topFace", "frontFace", "bottomFace", "backFace", "leftFace", "rightFace", "r", "even", "coords", "idx", "x", "makeFace", "half", "temp", "makeSticker", "y", "s", "Spring", "dt", "springF", "dampingF", "xPixelToClip", "val", "canvasSize", "yPixelToClip", "calcSlope", "x1", "y1", "x2", "y2", "areaTriangle", "x3", "y3", "topRow", "cube", "sticker", "topColumn", "frontRow", "frontColumn", "sq", "DragDetector", "x", "y", "div", "buffers", "clipX", "clipY", "getXY", "objectIndex", "xIndex", "yIndex", "topLeft", "topRight", "left", "right", "bottomLeft", "bottomRight", "posSlope", "negSlope", "temp", "xClip", "yClip", "slope", "coordinateIsInSticker", "i", "cart2d", "areaQuadrilateral", "sumAreaTriangles", "EPSILON", "output", "create", "perspective", "out", "fovy", "aspect", "near", "far", "f", "nf", "rotate", "a", "rad", "axis", "x", "y", "z", "len", "s", "t", "a00", "a01", "a02", "a03", "a10", "a11", "a12", "a13", "a20", "a21", "a22", "a23", "b00", "b01", "b02", "b10", "b11", "b12", "b20", "b21", "b22", "translate", "m", "v", "singleton", "instance", "constructor", "canvas", "gl", "programInfo", "initPrograms", "scenes", "settings", "time", "numLayers", "loopStarted", "startLoop", "render", "newScene", "selector", "div", "cube", "Cube", "spring", "Spring", "perspectiveMatrix", "initPerspective", "dragDetector", "DragDetector", "buffers", "createBuffers", "gl", "scene", "pointerdown", "offsetX", "offsetY", "pointermove", "pointerup", "calcOffset", "event", "rect", "x", "y", "addPointerListeners", "addTouchListeners", "initPrograms", "shaderProgram", "initShaderProgram", "element", "create", "perspective", "translate", "rotate", "bindPosition", "positionBuffer", "programInfo", "bindColor", "colorBuffer", "drawElements", "vsSource", "fsSource", "vertexShader", "loadShader", "fragmentShader", "type", "source", "shader", "resizeCanvasToDisplaySize", "displayWidth", "canvas", "displayHeight", "needResize", "newTime", "dt", "i", "scenes", "width", "height", "left", "bottom", "stickers", "animation", "chooseStickers", "_transformSingleton", "singleton", "_rotateSingleton", "object", "transform", "settings", "rotation", "rotateMat", "NARROW", "opened", "open", "ele", "close", "toggle", "addListenersForLeftModal", "drawer", "isOpen", "updateDrawer", "open", "event", "ele", "canvas", "gl", "initLearnPage", "lessons", "layers", "addListenersForLeftModal", "addLessonNavigatorListener", "addShowSolutionListeners", "i", "renderLesson", "render", "startLoop", "addResizeListener", "renderBasedOnWidth", "scene", "newScene", "scenes", "createBuffers", "lesson", "randomProblem", "colors", "determineColors", "problem", "moveCounter", "parsedAlg", "parseMovesFromAlg", "problemIndex", "randInt", "setupProblem", "faceToColor", "stickerToFace", "GRAY", "lessonNavigator", "event", "target", "lessonIndex", "NARROW", "close", "toggle", "leftButton", "rightButton", "showSolution", "next", "moves", "openClose", "drawerEle", "open", "alg", "lessons", "CENTERS", "layer1Corners", "layer2Corners", "layer1Edges", "layer2Edges", "layer3Edges", "cross", "firstLayer", "f2l", "eoll", "oll", "cpll", "allPieces", "main", "initLearnPage"]
}
